Storage:Data%20Location:DataIOFilter string DataDirectory= ..\data\MU\screening ..\data % % // path to top level data directory (directory) (allow_override)
Storage:BCI2000FileWriter string FileFormat= dat // format of data file (readonly)
Storage:Data%20Location:RunManager string DataFile= $%7bSubjectName%7d$%7bSubjectSession%7d/$%7bSubjectName%7dS$%7bSubjectSession%7dR$%7bSubjectRun%7d.$%7bFileFormat%7d // name of data file relative to DataDirectory
Filtering:SpatialFilter int SpatialFilterType= 0 2 0 3 // spatial filter type 0: none, 1: full matrix, 2: sparse matrix, 3: common average reference (CAR) (enumeration)
Filtering:SpatialFilter:SpatialFilter matrix SpatialFilter= 4 4 1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 1 0 % % // columns represent input channels, rows represent output channels
Filtering:SpatialFilter:SpatialFilter intlist SpatialFilterCAROutput= 0 // when using CAR filter type: list of output channels, or empty for all channels
Filtering:SpatialFilter:SpatialFilter int SpatialFilterMissingChannels= 1 0 0 1 // how to handle missing channels 0: ignore, 1: report error (enumeration)
Filtering:P3TemporalFilter int EpochLength= 500ms 500ms 0 % // Length of data epoch from stimulus onset
Filtering:P3TemporalFilter int EpochsToAverage= 0 1 0 % // Number of epochs to average
Filtering:P3TemporalFilter int SingleEpochMode= 0 0 0 1 // Report result after each epoch (boolean)
Filtering:LinearClassifier matrix Classifier= 2 { input%20channel input%20element%20(bin) output%20channel weight } 1 4 1 1 1 6 2 1 // Linear classification matrix in sparse representation
Application:Application%20Window:ApplicationWindow string WindowBackgroundColor= 0x505050 0x505050 % % // Application window background color (color)
Application:Application%20Window:ApplicationWindow matrix WindowInfo= 1 1 auto // Application window information (readonly)(noedit)
Application:AudioPlayback:ApplicationWindow float AudioPlaybackRate= auto // audio playback sampling rate
Application:AudioPlayback:ApplicationWindow int AudioPlaybackChannels= auto // number of playback output channels
Application:AudioPlayback:ApplicationWindow float AudioPlaybackBufferDuration= auto // duration of playback buffer
Application:Sequencing:StimulusTask float PreRunDuration= 3s 1 0 % // pause preceding first sequence
Application:Sequencing:StimulusTask float PostRunDuration= 3s 0 0 % // pause following last sequence
Application:Sequencing:StimulusTask float PreSequenceDuration= 0s 2s 0 % // pause preceding sequences/sets of intensifications
Application:Sequencing:StimulusTask float PostSequenceDuration= 0s 2s 0 % // pause following sequences/sets of intensifications
Application:Sequencing:StimulusTask float StimulusDuration= 3s 40ms 0 % // stimulus duration
Application:Sequencing:StimulusTask string EarlyOffsetExpression= % // abort stimulus if this expression becomes true
Application:Sequencing:StimulusTask float ISIMinDuration= 3s 80ms 0 % // minimum duration of inter-stimulus interval
Application:Sequencing:StimulusTask float ISIMaxDuration= 3s 80ms 0 % // maximum duration of inter-stimulus interval
Application:Result%20Processing:StimulusTask int InterpretMode= 0 0 0 2 // interpretation of results: 0 none, 1 online free mode, 2 copy mode (enumeration)
Application:Result%20Processing:StimulusTask int DisplayResults= 0 1 0 1 // display results of copy/free spelling (boolean)
Application:Result%20Processing:StimulusTask int AccumulateEvidence= 0 0 0 1 // accumulate evidence until a selection is made (boolean)
Application:Result%20Processing:StimulusTask float MinimumEvidence= 0 0 0 % // do not make a selection unless target evidence exceeds this value. For a normalized classifier, MinimumEvidence approximates -2.3*log10(Error Probability)
Application:Sequencing:StimulusPresentationTask intlist Sequence= 4 1 1 0 0 // Sequence in which stimuli are presented (deterministic mode)/ Stimulus frequencies for each stimulus (random mode)/ Ignored (P3Speller compatible mode)
Application:Sequencing:StimulusPresentationTask int SequenceType= 1 0 0 2 // Sequence of stimuli is 0 deterministic, 1 random, 2 P3Speller compatible (enumeration)
Application:Sequencing:StimulusPresentationTask int NumberOfSequences= 10 1 0 % // number of sequence repetitions
Application:Sequencing:StimulusPresentationTask intlist ToBeCopied= 0 1 1 % // Sequence in which stimuli need to be copied (only used in copy mode)
Application:Sequencing:StimulusPresentationTask string UserComment= Left%20Hand%20vs.%20Right%20Hand // User comments for a specific run
Application:Stimuli:StimulusPresentationTask matrix Stimuli= { caption icon audio } { stimulus1 stimulus2 stimulus3 stimulus4 } LEFT%20HAND RIGHT%20HAND BOTH%20HANDS BOTH%20FEET % % % % % % % % // captions and icons to be displayed, av media to be played for different stimuli
Application:Stimuli:StimulusPresentationTask matrix FocusOn= { caption icon audio } { focuson } Please%20focus%20on images\focuson.bmp sounds\uh-uh.wav // initial announcement what to focus on
Application:Stimuli:StimulusPresentationTask matrix Result= { caption icon audio } { result } The%20result%20was images\result.bmp sounds\uh-uh.wav // final result announcement 
Application:Stimuli:StimulusPresentationTask int StimulusWidth= 0 0 0 100 // StimulusWidth in percent of screen width (zero for original pixel size)
Application:Stimuli:StimulusPresentationTask int CaptionHeight= 10 0 0 100 // Height of stimulus caption text in percent of screen height
Application:Stimuli:StimulusPresentationTask string CaptionColor= 0x000000 0x00FFFFFF 0x00000000 0xFFFFFFFF // Color of stimulus caption text (color)
Application:Stimuli:StimulusPresentationTask string BackgroundColor= 0x80FF00 0x00FFFF00 0x00000000 0xFFFFFFFF // Color of stimulus background (color)
Application:Stimuli:StimulusPresentationTask int CaptionSwitch= 1 1 0 1 // Present captions (boolean)
Application:Stimuli:StimulusPresentationTask int IconSwitch= 0 1 0 1 // Present icon files (boolean)
Application:Stimuli:StimulusPresentationTask int AVSwitch= 0 0 0 1 // Present media files (boolean)
Application:Stimuli:StimulusPresentationTask float AudioVolume= 100 100 0 100 // Volume for audio playback in percent
Application:Stimuli:StimulusPresentationTask int AVPlayToEnd= 1 1 0 1 // Never abort playback of media files (boolean)
Application:Stimuli:StimulusPresentationTask int AudioSwitch= 0 1 0 1 // Present audio files (boolean)(superseded by AVSwitch)
Application:Human%20Interface%20Devices:KeystrokeFilter string KeystrokeStateName= % // State to be translated into keystrokes (0-F), empty for off
Application:Human%20Interface%20Devices:KeystrokeFilter string KeystrokeExpression= % // Expression that evaluates to a virtual keycode, empty for off
Application:Human%20Interface%20Devices:KeystrokeFilter string KeystrokeExpressionOnStartRun= % // Expression that initializes expression variables on StartRun
Application:Localization:Localization string Language= Default Default % % // Language for user messages
Application:Localization:Localization matrix LocalizedStrings= { German } { TIME%20OUT%20!!! Waiting%20to%20start%20... } Zeit%20abgelaufen! Warte%20... // Localized user messages
