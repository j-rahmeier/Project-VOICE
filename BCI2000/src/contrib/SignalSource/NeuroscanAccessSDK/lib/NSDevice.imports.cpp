// Import definitions for NSDevice.h, generated by dylib_imports.sh
#include "NSDevice.imports.h"
#include "DylibImports.h"

extern "C" {
long (__stdcall *NSDConnect)(int nType,const char* pId) = 0;
int (__stdcall *NSDDisconnect)(void) = 0;
int (__stdcall *NSDGetCapabilities)(char* pCapabilities) = 0;
int (__stdcall *NSDGetBlocksPerSecond)(void) = 0;
int (__stdcall *NSDGetConfiguration)(char* pConfiguration) = 0;
int (__stdcall *NSDSetConfiguration)(char* pConfiguration) = 0;
int (__stdcall *NSDCreateConfiguration)(int nChannels, int nRate) = 0;
int (__stdcall *NSDGetData)(float* pData) = 0;
}

static const Dylib::Import imports[] =
{
  { "NSDConnect", (void**)&NSDConnect, Dylib::Import::cMangled },
  { "NSDDisconnect", (void**)&NSDDisconnect, Dylib::Import::cMangled },
  { "NSDGetCapabilities", (void**)&NSDGetCapabilities, Dylib::Import::cMangled },
  { "NSDGetBlocksPerSecond", (void**)&NSDGetBlocksPerSecond, Dylib::Import::cMangled },
  { "NSDGetConfiguration", (void**)&NSDGetConfiguration, Dylib::Import::cMangled },
  { "NSDSetConfiguration", (void**)&NSDSetConfiguration, Dylib::Import::cMangled },
  { "NSDCreateConfiguration", (void**)&NSDCreateConfiguration, Dylib::Import::cMangled },
  { "NSDGetData", (void**)&NSDGetData, Dylib::Import::cMangled },
  { 0, 0, 0 }
};

// Here you may specify a custom error message to be displayed when the library cannot be found.
static const char* notFoundMsg = "";
// Here you may specify an URL to some local or remote help resource.
static const char* notFoundURL = "";
RegisterDylib( NSDevice, imports, notFoundMsg, notFoundURL );

