// Import declarations for include/edk.h, generated by dylib_imports.sh
#ifndef edk_IMPORTS_H
#define edk_IMPORTS_H

#include "Win32Defs.h"

#define ES_Create ES_Create_47bf
#define ES_Free ES_Free_6d1d
#define ES_Init ES_Init_b684
#define ES_GetTimeFromStart ES_GetTimeFromStart_1419
#define ES_GetHeadsetOn ES_GetHeadsetOn_f0fe
#define ES_GetNumContactQualityChannels ES_GetNumContactQualityChannels_92d4
#define ES_GetContactQuality ES_GetContactQuality_6a27
#define ES_GetContactQualityFromAllChannels ES_GetContactQualityFromAllChannels_7c21
#define ES_ExpressivIsBlink ES_ExpressivIsBlink_be2e
#define ES_ExpressivIsLeftWink ES_ExpressivIsLeftWink_5cbf
#define ES_ExpressivIsRightWink ES_ExpressivIsRightWink_a659
#define ES_ExpressivIsEyesOpen ES_ExpressivIsEyesOpen_1058
#define ES_ExpressivIsLookingUp ES_ExpressivIsLookingUp_d9c5
#define ES_ExpressivIsLookingDown ES_ExpressivIsLookingDown_4daf
#define ES_ExpressivIsLookingLeft ES_ExpressivIsLookingLeft_7f6c
#define ES_ExpressivIsLookingRight ES_ExpressivIsLookingRight_95f0
#define ES_ExpressivGetEyelidState ES_ExpressivGetEyelidState_b1a9
#define ES_ExpressivGetEyeLocation ES_ExpressivGetEyeLocation_d9d5
#define ES_ExpressivGetEyebrowExtent ES_ExpressivGetEyebrowExtent_9ebc
#define ES_ExpressivGetSmileExtent ES_ExpressivGetSmileExtent_f4c6
#define ES_ExpressivGetClenchExtent ES_ExpressivGetClenchExtent_9556
#define ES_ExpressivGetUpperFaceAction ES_ExpressivGetUpperFaceAction_4c34
#define ES_ExpressivGetUpperFaceActionPower ES_ExpressivGetUpperFaceActionPower_bd6d
#define ES_ExpressivGetLowerFaceAction ES_ExpressivGetLowerFaceAction_41f5
#define ES_ExpressivGetLowerFaceActionPower ES_ExpressivGetLowerFaceActionPower_2cdb
#define ES_ExpressivIsActive ES_ExpressivIsActive_ad70
#define ES_AffectivGetExcitementLongTermScore ES_AffectivGetExcitementLongTermScore_2122
#define ES_AffectivGetExcitementShortTermScore ES_AffectivGetExcitementShortTermScore_4b3b
#define ES_AffectivIsActive ES_AffectivIsActive_d300
#define ES_AffectivGetMeditationScore ES_AffectivGetMeditationScore_ace4
#define ES_AffectivGetFrustrationScore ES_AffectivGetFrustrationScore_fba5
#define ES_AffectivGetEngagementBoredomScore ES_AffectivGetEngagementBoredomScore_96ea
#define ES_CognitivGetCurrentAction ES_CognitivGetCurrentAction_bc8a
#define ES_CognitivGetCurrentActionPower ES_CognitivGetCurrentActionPower_1db7
#define ES_CognitivIsActive ES_CognitivIsActive_4758
#define ES_GetWirelessSignalStatus ES_GetWirelessSignalStatus_71f3
#define ES_Copy ES_Copy_a6ea
#define ES_AffectivEqual ES_AffectivEqual_08f3
#define ES_ExpressivEqual ES_ExpressivEqual_92d0
#define ES_CognitivEqual ES_CognitivEqual_a923
#define ES_EmoEngineEqual ES_EmoEngineEqual_4b22
#define ES_Equal ES_Equal_7732
#define ES_GetBatteryChargeLevel ES_GetBatteryChargeLevel_a453
#define EE_EngineConnect EE_EngineConnect_7ee3
#define EE_EngineRemoteConnect EE_EngineRemoteConnect_60ff
#define EE_EngineDisconnect EE_EngineDisconnect_e592
#define EE_EnableDiagnostics EE_EnableDiagnostics_f851
#define EE_EmoEngineEventCreate EE_EmoEngineEventCreate_4190
#define EE_ProfileEventCreate EE_ProfileEventCreate_aaf7
#define EE_EmoEngineEventFree EE_EmoEngineEventFree_6521
#define EE_EmoStateCreate EE_EmoStateCreate_27c5
#define EE_EmoStateFree EE_EmoStateFree_ab1d
#define EE_EmoEngineEventGetType EE_EmoEngineEventGetType_efcf
#define EE_CognitivEventGetType EE_CognitivEventGetType_39bb
#define EE_ExpressivEventGetType EE_ExpressivEventGetType_75e0
#define EE_EmoEngineEventGetUserId EE_EmoEngineEventGetUserId_ce4d
#define EE_EmoEngineEventGetEmoState EE_EmoEngineEventGetEmoState_f3bd
#define EE_EngineGetNextEvent EE_EngineGetNextEvent_eedd
#define EE_EngineClearEventQueue EE_EngineClearEventQueue_4f4c
#define EE_EngineGetNumUser EE_EngineGetNumUser_0daf
#define EE_SetHardwarePlayerDisplay EE_SetHardwarePlayerDisplay_b994
#define EE_SetUserProfile EE_SetUserProfile_b122
#define EE_GetUserProfile EE_GetUserProfile_c552
#define EE_GetBaseProfile EE_GetBaseProfile_90f1
#define EE_GetUserProfileSize EE_GetUserProfileSize_936a
#define EE_GetUserProfileBytes EE_GetUserProfileBytes_2902
#define EE_LoadUserProfile EE_LoadUserProfile_313b
#define EE_SaveUserProfile EE_SaveUserProfile_c453
#define EE_ExpressivSetThreshold EE_ExpressivSetThreshold_718e
#define EE_ExpressivGetThreshold EE_ExpressivGetThreshold_5ea4
#define EE_ExpressivSetTrainingAction EE_ExpressivSetTrainingAction_986c
#define EE_ExpressivSetTrainingControl EE_ExpressivSetTrainingControl_d455
#define EE_ExpressivGetTrainingAction EE_ExpressivGetTrainingAction_da4b
#define EE_ExpressivGetTrainingTime EE_ExpressivGetTrainingTime_9f72
#define EE_ExpressivGetTrainedSignatureActions EE_ExpressivGetTrainedSignatureActions_ad7a
#define EE_ExpressivGetTrainedSignatureAvailable EE_ExpressivGetTrainedSignatureAvailable_90ad
#define EE_ExpressivSetSignatureType EE_ExpressivSetSignatureType_9e52
#define EE_ExpressivGetSignatureType EE_ExpressivGetSignatureType_a312
#define EE_CognitivSetActiveActions EE_CognitivSetActiveActions_f3db
#define EE_CognitivGetActiveActions EE_CognitivGetActiveActions_120c
#define EE_CognitivGetTrainingTime EE_CognitivGetTrainingTime_45a1
#define EE_CognitivSetTrainingControl EE_CognitivSetTrainingControl_bb2b
#define EE_CognitivSetTrainingAction EE_CognitivSetTrainingAction_c6c4
#define EE_CognitivGetTrainingAction EE_CognitivGetTrainingAction_a0b0
#define EE_CognitivGetTrainedSignatureActions EE_CognitivGetTrainedSignatureActions_5da6
#define EE_CognitivGetOverallSkillRating EE_CognitivGetOverallSkillRating_82b5
#define EE_CognitivGetActionSkillRating EE_CognitivGetActionSkillRating_c40c
#define EE_CognitivSetActivationLevel EE_CognitivSetActivationLevel_5ddd
#define EE_CognitivSetActionSensitivity EE_CognitivSetActionSensitivity_7b46
#define EE_CognitivGetActivationLevel EE_CognitivGetActivationLevel_2be4
#define EE_CognitivGetActionSensitivity EE_CognitivGetActionSensitivity_42dc
#define EE_CognitivStartSamplingNeutral EE_CognitivStartSamplingNeutral_c4d1
#define EE_CognitivStopSamplingNeutral EE_CognitivStopSamplingNeutral_1c37
#define EE_CognitivSetSignatureCaching EE_CognitivSetSignatureCaching_a46c
#define EE_CognitivGetSignatureCaching EE_CognitivGetSignatureCaching_1fbb
#define EE_CognitivSetSignatureCacheSize EE_CognitivSetSignatureCacheSize_8f9c
#define EE_CognitivGetSignatureCacheSize EE_CognitivGetSignatureCacheSize_da42
#define EE_HeadsetGetSensorDetails EE_HeadsetGetSensorDetails_2de4
#define EE_HardwareGetVersion EE_HardwareGetVersion_87c9
#define EE_SoftwareGetVersion EE_SoftwareGetVersion_01f1
#define EE_HeadsetGetGyroDelta EE_HeadsetGetGyroDelta_1c21
#define EE_HeadsetGyroRezero EE_HeadsetGyroRezero_05fe
#define EE_OptimizationParamCreate EE_OptimizationParamCreate_16f9
#define EE_OptimizationParamFree EE_OptimizationParamFree_37cd
#define EE_OptimizationEnable EE_OptimizationEnable_98fa
#define EE_OptimizationIsEnabled EE_OptimizationIsEnabled_884a
#define EE_OptimizationDisable EE_OptimizationDisable_36ac
#define EE_OptimizationGetParam EE_OptimizationGetParam_80e9
#define EE_OptimizationGetVitalAlgorithm EE_OptimizationGetVitalAlgorithm_c1f5
#define EE_OptimizationSetVitalAlgorithm EE_OptimizationSetVitalAlgorithm_2c36
#define EE_ResetDetection EE_ResetDetection_cb4e
#define EE_DataCreate EE_DataCreate_be48
#define EE_DataFree EE_DataFree_7ead
#define EE_DataUpdateHandle EE_DataUpdateHandle_d6f5
#define EE_DataGet EE_DataGet_8b7a
#define EE_DataGetNumberOfSample EE_DataGetNumberOfSample_0280
#define EE_DataSetBufferSizeInSec EE_DataSetBufferSizeInSec_2ce8
#define EE_DataGetBufferSizeInSec EE_DataGetBufferSizeInSec_64ce
#define EE_DataAcquisitionEnable EE_DataAcquisitionEnable_a6bf
#define EE_DataAcquisitionIsEnabled EE_DataAcquisitionIsEnabled_ad55
#define EE_DataSetSychronizationSignal EE_DataSetSychronizationSignal_9498
#define EE_DataSetMarker EE_DataSetMarker_32fb
#define EE_DataGetSamplingRate EE_DataGetSamplingRate_72e6

#include "edk.h"

#undef ES_Create
#undef ES_Free
#undef ES_Init
#undef ES_GetTimeFromStart
#undef ES_GetHeadsetOn
#undef ES_GetNumContactQualityChannels
#undef ES_GetContactQuality
#undef ES_GetContactQualityFromAllChannels
#undef ES_ExpressivIsBlink
#undef ES_ExpressivIsLeftWink
#undef ES_ExpressivIsRightWink
#undef ES_ExpressivIsEyesOpen
#undef ES_ExpressivIsLookingUp
#undef ES_ExpressivIsLookingDown
#undef ES_ExpressivIsLookingLeft
#undef ES_ExpressivIsLookingRight
#undef ES_ExpressivGetEyelidState
#undef ES_ExpressivGetEyeLocation
#undef ES_ExpressivGetEyebrowExtent
#undef ES_ExpressivGetSmileExtent
#undef ES_ExpressivGetClenchExtent
#undef ES_ExpressivGetUpperFaceAction
#undef ES_ExpressivGetUpperFaceActionPower
#undef ES_ExpressivGetLowerFaceAction
#undef ES_ExpressivGetLowerFaceActionPower
#undef ES_ExpressivIsActive
#undef ES_AffectivGetExcitementLongTermScore
#undef ES_AffectivGetExcitementShortTermScore
#undef ES_AffectivIsActive
#undef ES_AffectivGetMeditationScore
#undef ES_AffectivGetFrustrationScore
#undef ES_AffectivGetEngagementBoredomScore
#undef ES_CognitivGetCurrentAction
#undef ES_CognitivGetCurrentActionPower
#undef ES_CognitivIsActive
#undef ES_GetWirelessSignalStatus
#undef ES_Copy
#undef ES_AffectivEqual
#undef ES_ExpressivEqual
#undef ES_CognitivEqual
#undef ES_EmoEngineEqual
#undef ES_Equal
#undef ES_GetBatteryChargeLevel
#undef EE_EngineConnect
#undef EE_EngineRemoteConnect
#undef EE_EngineDisconnect
#undef EE_EnableDiagnostics
#undef EE_EmoEngineEventCreate
#undef EE_ProfileEventCreate
#undef EE_EmoEngineEventFree
#undef EE_EmoStateCreate
#undef EE_EmoStateFree
#undef EE_EmoEngineEventGetType
#undef EE_CognitivEventGetType
#undef EE_ExpressivEventGetType
#undef EE_EmoEngineEventGetUserId
#undef EE_EmoEngineEventGetEmoState
#undef EE_EngineGetNextEvent
#undef EE_EngineClearEventQueue
#undef EE_EngineGetNumUser
#undef EE_SetHardwarePlayerDisplay
#undef EE_SetUserProfile
#undef EE_GetUserProfile
#undef EE_GetBaseProfile
#undef EE_GetUserProfileSize
#undef EE_GetUserProfileBytes
#undef EE_LoadUserProfile
#undef EE_SaveUserProfile
#undef EE_ExpressivSetThreshold
#undef EE_ExpressivGetThreshold
#undef EE_ExpressivSetTrainingAction
#undef EE_ExpressivSetTrainingControl
#undef EE_ExpressivGetTrainingAction
#undef EE_ExpressivGetTrainingTime
#undef EE_ExpressivGetTrainedSignatureActions
#undef EE_ExpressivGetTrainedSignatureAvailable
#undef EE_ExpressivSetSignatureType
#undef EE_ExpressivGetSignatureType
#undef EE_CognitivSetActiveActions
#undef EE_CognitivGetActiveActions
#undef EE_CognitivGetTrainingTime
#undef EE_CognitivSetTrainingControl
#undef EE_CognitivSetTrainingAction
#undef EE_CognitivGetTrainingAction
#undef EE_CognitivGetTrainedSignatureActions
#undef EE_CognitivGetOverallSkillRating
#undef EE_CognitivGetActionSkillRating
#undef EE_CognitivSetActivationLevel
#undef EE_CognitivSetActionSensitivity
#undef EE_CognitivGetActivationLevel
#undef EE_CognitivGetActionSensitivity
#undef EE_CognitivStartSamplingNeutral
#undef EE_CognitivStopSamplingNeutral
#undef EE_CognitivSetSignatureCaching
#undef EE_CognitivGetSignatureCaching
#undef EE_CognitivSetSignatureCacheSize
#undef EE_CognitivGetSignatureCacheSize
#undef EE_HeadsetGetSensorDetails
#undef EE_HardwareGetVersion
#undef EE_SoftwareGetVersion
#undef EE_HeadsetGetGyroDelta
#undef EE_HeadsetGyroRezero
#undef EE_OptimizationParamCreate
#undef EE_OptimizationParamFree
#undef EE_OptimizationEnable
#undef EE_OptimizationIsEnabled
#undef EE_OptimizationDisable
#undef EE_OptimizationGetParam
#undef EE_OptimizationGetVitalAlgorithm
#undef EE_OptimizationSetVitalAlgorithm
#undef EE_ResetDetection
#undef EE_DataCreate
#undef EE_DataFree
#undef EE_DataUpdateHandle
#undef EE_DataGet
#undef EE_DataGetNumberOfSample
#undef EE_DataSetBufferSizeInSec
#undef EE_DataGetBufferSizeInSec
#undef EE_DataAcquisitionEnable
#undef EE_DataAcquisitionIsEnabled
#undef EE_DataSetSychronizationSignal
#undef EE_DataSetMarker
#undef EE_DataGetSamplingRate

extern "C" {
extern EmoStateHandle ( *ES_Create)();
extern void ( *ES_Free)(EmoStateHandle state);
extern void ( *ES_Init)(EmoStateHandle state);
extern float ( *ES_GetTimeFromStart)(EmoStateHandle state);
extern int ( *ES_GetHeadsetOn)(EmoStateHandle state);
extern int ( *ES_GetNumContactQualityChannels)(EmoStateHandle state);
extern EE_EEG_ContactQuality_t ( *ES_GetContactQuality)(EmoStateHandle state, int electroIdx);
extern int ( *ES_GetContactQualityFromAllChannels)(EmoStateHandle state, EE_EEG_ContactQuality_t* contactQuality, size_t numChannels);
extern int ( *ES_ExpressivIsBlink)(EmoStateHandle state);
extern int ( *ES_ExpressivIsLeftWink)(EmoStateHandle state);
extern int ( *ES_ExpressivIsRightWink)(EmoStateHandle state);
extern int ( *ES_ExpressivIsEyesOpen)(EmoStateHandle state);
extern int ( *ES_ExpressivIsLookingUp)(EmoStateHandle state);
extern int ( *ES_ExpressivIsLookingDown)(EmoStateHandle state);
extern int ( *ES_ExpressivIsLookingLeft)(EmoStateHandle state);
extern int ( *ES_ExpressivIsLookingRight)(EmoStateHandle state);
extern void ( *ES_ExpressivGetEyelidState)(EmoStateHandle state, float* leftEye, float* rightEye);
extern void ( *ES_ExpressivGetEyeLocation)(EmoStateHandle state, float* x, float* y);
extern float ( *ES_ExpressivGetEyebrowExtent)(EmoStateHandle state);
extern float ( *ES_ExpressivGetSmileExtent)(EmoStateHandle state);
extern float ( *ES_ExpressivGetClenchExtent)(EmoStateHandle state);
extern EE_ExpressivAlgo_t ( *ES_ExpressivGetUpperFaceAction)(EmoStateHandle state);
extern float ( *ES_ExpressivGetUpperFaceActionPower)(EmoStateHandle state);
extern EE_ExpressivAlgo_t ( *ES_ExpressivGetLowerFaceAction)(EmoStateHandle state);
extern float ( *ES_ExpressivGetLowerFaceActionPower)(EmoStateHandle state);
extern int ( *ES_ExpressivIsActive)(EmoStateHandle state, EE_ExpressivAlgo_t type);
extern float ( *ES_AffectivGetExcitementLongTermScore)(EmoStateHandle state);
extern float ( *ES_AffectivGetExcitementShortTermScore)(EmoStateHandle state);
extern int ( *ES_AffectivIsActive)(EmoStateHandle state, EE_AffectivAlgo_t type);
extern float ( *ES_AffectivGetMeditationScore)(EmoStateHandle state);
extern float ( *ES_AffectivGetFrustrationScore)(EmoStateHandle state);
extern float ( *ES_AffectivGetEngagementBoredomScore)(EmoStateHandle state);
extern EE_CognitivAction_t ( *ES_CognitivGetCurrentAction)(EmoStateHandle state);
extern float ( *ES_CognitivGetCurrentActionPower)(EmoStateHandle state);
extern int ( *ES_CognitivIsActive)(EmoStateHandle state);
extern EE_SignalStrength_t ( *ES_GetWirelessSignalStatus)(EmoStateHandle state);
extern void ( *ES_Copy)(EmoStateHandle a, EmoStateHandle b);
extern int ( *ES_AffectivEqual)(EmoStateHandle a, EmoStateHandle b);
extern int ( *ES_ExpressivEqual)(EmoStateHandle a, EmoStateHandle b);
extern int ( *ES_CognitivEqual)(EmoStateHandle a, EmoStateHandle b);
extern int ( *ES_EmoEngineEqual)(EmoStateHandle a, EmoStateHandle b);
extern int ( *ES_Equal)(EmoStateHandle a, EmoStateHandle b);
extern void ( *ES_GetBatteryChargeLevel)(EmoStateHandle state, int* chargeLevel, int* maxChargeLevel);
extern int ( *EE_EngineConnect)();
extern int ( *EE_EngineRemoteConnect)(const char* szHost, unsigned short port);
extern int ( *EE_EngineDisconnect)();
extern int ( *EE_EnableDiagnostics)(const char* szFilename, int fEnable, int nReserved);
extern EmoEngineEventHandle ( *EE_EmoEngineEventCreate)();
extern EmoEngineEventHandle ( *EE_ProfileEventCreate)();
extern void ( *EE_EmoEngineEventFree)(EmoEngineEventHandle hEvent);
extern EmoStateHandle ( *EE_EmoStateCreate)();
extern void ( *EE_EmoStateFree)(EmoStateHandle hState);
extern EE_Event_t ( *EE_EmoEngineEventGetType)(EmoEngineEventHandle hEvent);
extern EE_CognitivEvent_t ( *EE_CognitivEventGetType)(EmoEngineEventHandle hEvent);
extern EE_ExpressivEvent_t ( *EE_ExpressivEventGetType)(EmoEngineEventHandle hEvent);
extern int ( *EE_EmoEngineEventGetUserId)(EmoEngineEventHandle hEvent, unsigned int *pUserIdOut);
extern int ( *EE_EmoEngineEventGetEmoState)(EmoEngineEventHandle hEvent, EmoStateHandle hEmoState);
extern int ( *EE_EngineGetNextEvent)(EmoEngineEventHandle hEvent);
extern int ( *EE_EngineClearEventQueue)(int eventTypes);
extern int ( *EE_EngineGetNumUser)(unsigned int* pNumUserOut);
extern int ( *EE_SetHardwarePlayerDisplay)(unsigned int userId, unsigned int playerNum);
extern int ( *EE_SetUserProfile)(unsigned int userId, const unsigned char profileBuffer[], unsigned int length);
extern int ( *EE_GetUserProfile)(unsigned int userId, EmoEngineEventHandle hEvent);
extern int ( *EE_GetBaseProfile)(EmoEngineEventHandle hEvent);
extern int ( *EE_GetUserProfileSize)(EmoEngineEventHandle hEvt, unsigned int* pProfileSizeOut);
extern int ( *EE_GetUserProfileBytes)(EmoEngineEventHandle hEvt, unsigned char destBuffer[], unsigned int length);
extern int ( *EE_LoadUserProfile)(unsigned int userID, const char* szInputFilename);
extern int ( *EE_SaveUserProfile)(unsigned int userID, const char* szOutputFilename);
extern int ( *EE_ExpressivSetThreshold)(unsigned int userId, EE_ExpressivAlgo_t algoName, EE_ExpressivThreshold_t thresholdName, int value);
extern int ( *EE_ExpressivGetThreshold)(unsigned int userId, EE_ExpressivAlgo_t algoName, EE_ExpressivThreshold_t thresholdName, int *pValueOut);
extern int ( *EE_ExpressivSetTrainingAction)(unsigned int userId, EE_ExpressivAlgo_t action);
extern int ( *EE_ExpressivSetTrainingControl)(unsigned int userId, EE_ExpressivTrainingControl_t control);
extern int ( *EE_ExpressivGetTrainingAction)(unsigned int userId, EE_ExpressivAlgo_t* pActionOut);
extern int ( *EE_ExpressivGetTrainingTime)(unsigned int userId, unsigned int* pTrainingTimeOut);
extern int ( *EE_ExpressivGetTrainedSignatureActions)(unsigned int userId, unsigned long* pTrainedActionsOut);
extern int ( *EE_ExpressivGetTrainedSignatureAvailable)(unsigned int userId, int* pfAvailableOut);
extern int ( *EE_ExpressivSetSignatureType)(unsigned int userId, EE_ExpressivSignature_t sigType);
extern int ( *EE_ExpressivGetSignatureType)(unsigned int userId, EE_ExpressivSignature_t* pSigTypeOut);
extern int ( *EE_CognitivSetActiveActions)(unsigned int userId, unsigned long activeActions);
extern int ( *EE_CognitivGetActiveActions)(unsigned int userId, unsigned long* pActiveActionsOut);
extern int ( *EE_CognitivGetTrainingTime)(unsigned int userId, unsigned int* pTrainingTimeOut);
extern int ( *EE_CognitivSetTrainingControl)(unsigned int userId, EE_CognitivTrainingControl_t control);
extern int ( *EE_CognitivSetTrainingAction)(unsigned int userId, EE_CognitivAction_t action);
extern int ( *EE_CognitivGetTrainingAction)(unsigned int userId, EE_CognitivAction_t* pActionOut);
extern int ( *EE_CognitivGetTrainedSignatureActions)(unsigned int userId, unsigned long* pTrainedActionsOut);
extern int ( *EE_CognitivGetOverallSkillRating)(unsigned int userId, float* pOverallSkillRatingOut);
extern int ( *EE_CognitivGetActionSkillRating)(unsigned int userId, EE_CognitivAction_t action, float* pActionSkillRatingOut);
extern int ( *EE_CognitivSetActivationLevel)(unsigned int userId, int level);
extern int ( *EE_CognitivSetActionSensitivity)(unsigned int userId, int action1Sensitivity, int action2Sensitivity, int action3Sensitivity, int action4Sensitivity);
extern int ( *EE_CognitivGetActivationLevel)(unsigned int userId, int *pLevelOut);
extern int ( *EE_CognitivGetActionSensitivity)(unsigned int userId, int* pAction1SensitivityOut, int* pAction2SensitivityOut, int* pAction3SensitivityOut, int* pAction4SensitivityOut);
extern int ( *EE_CognitivStartSamplingNeutral)(unsigned int userId);
extern int ( *EE_CognitivStopSamplingNeutral)(unsigned int userId);
extern int ( *EE_CognitivSetSignatureCaching)(unsigned int userId, unsigned int enabled);
extern int ( *EE_CognitivGetSignatureCaching)(unsigned int userId, unsigned int* pEnabledOut);
extern int ( *EE_CognitivSetSignatureCacheSize)(unsigned int userId, unsigned int size);
extern int ( *EE_CognitivGetSignatureCacheSize)(unsigned int userId, unsigned int* pSizeOut);
extern int ( *EE_HeadsetGetSensorDetails)(EE_InputChannels_t channelId, InputSensorDescriptor_t* pDescriptorOut);
extern int ( *EE_HardwareGetVersion)(unsigned int userId, unsigned long* pHwVersionOut);
extern int ( *EE_SoftwareGetVersion)(char* pszVersionOut, unsigned int nVersionChars, unsigned long* pBuildNumOut);
extern int ( *EE_HeadsetGetGyroDelta)(unsigned int userId, int* pXOut, int* pYOut);
extern int ( *EE_HeadsetGyroRezero)(unsigned int userId);
extern OptimizationParamHandle ( *EE_OptimizationParamCreate)();
extern void ( *EE_OptimizationParamFree)(OptimizationParamHandle hParam);
extern int ( *EE_OptimizationEnable)(OptimizationParamHandle hParam);
extern int ( *EE_OptimizationIsEnabled)(bool* pEnabledOut);
extern int ( *EE_OptimizationDisable)();
extern int ( *EE_OptimizationGetParam)(OptimizationParamHandle hParam);
extern int ( *EE_OptimizationGetVitalAlgorithm)(OptimizationParamHandle hParam, EE_EmotivSuite_t suite, unsigned int* pVitalAlgorithmBitVectorOut);
extern int ( *EE_OptimizationSetVitalAlgorithm)(OptimizationParamHandle hParam, EE_EmotivSuite_t suite, unsigned int vitalAlgorithmBitVector);
extern int ( *EE_ResetDetection)(unsigned int userId, EE_EmotivSuite_t suite, unsigned int detectionBitVector);
extern DataHandle ( *EE_DataCreate)();
extern void ( *EE_DataFree)(DataHandle hData);
extern int ( *EE_DataUpdateHandle)(unsigned int userId, DataHandle hData);
extern int ( *EE_DataGet)(DataHandle hData, EE_DataChannel_t channel, double buffer[], unsigned int bufferSizeInSample);
extern int ( *EE_DataGetNumberOfSample)(DataHandle hData, unsigned int* nSampleOut);
extern int ( *EE_DataSetBufferSizeInSec)(float bufferSizeInSec);
extern int ( *EE_DataGetBufferSizeInSec)(float* pBufferSizeInSecOut);
extern int ( *EE_DataAcquisitionEnable)(unsigned int userId, bool enable);
extern int ( *EE_DataAcquisitionIsEnabled)(unsigned int userId, bool* pEnableOut);
extern int ( *EE_DataSetSychronizationSignal)(unsigned int userId, int signal);
extern int ( *EE_DataSetMarker)(unsigned int userId, int marker);
extern int ( *EE_DataGetSamplingRate)(unsigned int userId, unsigned int* samplingRateOut);
}

namespace Dylib { bool edk_Loaded(); }

#endif // edk_IMPORTS_H
