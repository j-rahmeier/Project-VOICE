<!DOCTYPE html>
<html lang="en" dir="ltr">
<head>
<meta charset="UTF-8"/>
<title>Programming Reference:MatlabFilter - BCI2000 Help</title>
<link rel='shortcut icon' href='../../rsrc/favicon.ico' />
<style type='text/css'>
html { font-size:95%; font-family:arial,helvetica,sans-serif }
.printfooter { display:none }
#tocmain { font-size:81%; font-weight:bold; color:black; background-color:white; border:1px solid black; padding:1em; z-index:10; position:fixed; left:-1px; top:-1px; width:150px; }
#tocmain a { color:blue; text-decoration:none }
#tocmain ul { margin:0 0 0 0.4em; padding:0.1em 0 0 0.1em; list-style-position:outside; list-style-type:disc }
#tocmain li { text-indent:0; margin:0 0 0 1em; padding: 0 0 0 0 }
#tocmain p { margin:0; padding:0.1em 0 0 0.1em }
#tocmain .toc1 { margin-left:1.25em; }
#tocmain .toc2 { margin-left:2.25em; }
#tocmain .toc3 { margin-left:3.25em; }
#article { font-size:91%; position:absolute; left:200px; right:0; padding:1em; margin:0 }
</style>
</head>
<body>
 <div id='tocmain'>
 <a href='Main_Page.html'><img src='../../rsrc/bci2000logo.svg' alt='[Main Page]' /></a> <hr class="sep" /><p class="toc0"><a href="User_Tutorial%253ABCI2000_Tour.html">GettingStarted</a></p><ul></ul><p class="toc0"><a href="User_Reference%253AContents.html">User Manual</a></p><ul></ul><p class="toc0"><a href="Technical_Reference%253AContents.html">Technical Reference</a></p><ul></ul><p class="toc0"><a href="Programming_Reference%253AContents.html">Programming Manual</a></p><ul><li class="toc1">Concepts</li><ul><li class="toc2"><a href="Programming_Reference%253AFilter_Chain.html">Filter Chain</a></li><li class="toc2"><a href="Programming_Reference%253ASignals.html">Signals</a></li><li class="toc2"><a href="Programming_Reference%253AError_Handling.html">Error Handling</a></li><li class="toc2"><a href="Programming_Reference%253ALocalization.html">Localization</a></li><li class="toc2"><a href="Programming_Reference%253ARapid_Development.html">Rapid Development</a></li></ul><li class="toc1">Reference</li><ul><li class="toc2"><a href="Programming_Reference%253AGenericFilter_Class.html">GenericFilter</a></li><li class="toc2"><a href="Programming_Reference%253AEnvironment_Class.html">Environment</a></li><li class="toc2"><a href="Programming_Reference%253AGenericVisualization_Class.html">GenericVisualization</a></li><li class="toc2"><a href="Programming_Reference%253AErrors_and_Warnings.html">Errors and Warnings</a></li><li class="toc2"><a href="Programming_Reference%253ADebug_Output.html">Debug Output</a></li></ul><li class="toc1">Data Acquisition</li><ul><li class="toc2"><a href="Programming_Reference%253AGenericADC_Class.html">GenericADC</a></li></ul><li class="toc1">Data Storage</li><ul><li class="toc2"><a href="Programming_Reference%253AGenericFileWriter_Class.html">GenericFileWriter</a></li><li class="toc2"><a href="Programming_Reference%253ABCI2000FileReader_Class.html">BCI2000FileReader</a></li></ul><li class="toc1">Signal Processing</li><ul><li class="toc2"><a href="Programming_Reference%253AIIRFilterBase_Class.html">IIR Filters</a></li></ul><li class="toc1">Application Modules</li><ul><li class="toc2"><a href="Programming_Reference%253AApplicationBase_Class.html">ApplicationBase</a></li><li class="toc2"><a href="Programming_Reference%253AFeedbackTask_Class.html">FeedbackTask</a></li><li class="toc2"><a href="Programming_Reference%253AStimulusTask_Class.html">StimulusTask</a></li><li class="toc2"><a href="Programming_Reference%253A3D_API.html">3D API</a></li></ul><li class="toc1">Howtos</li><ul><li class="toc2"><a href="Programming_Howto%253ABuilding_BCI2000.html">Building BCI2000</a></li><li class="toc2"><a href="Programming_Howto%253ASVN_Client_Setup.html">SVN Client Setup</a></li><li class="toc2"><a href="Programming_Howto%253AUsing_TortoiseSVN.html">Using TortoiseSVN</a></li></ul><li class="toc1"><a href="Programming_FAQ.html">FAQ</a></li><li class="toc1">Tutorials</li><ul><li class="toc2"><a href="Programming_Tutorial%253AImplementing_a_Data_Acquisition_Module.html">Data Acquisition</a></li><li class="toc2"><a href="Programming_Tutorial%253AImplementing_a_Signal_Processing_Filter.html">Signal Processing</a></li><li class="toc2"><a href="Programming_Tutorial%253AImplementing_a_Matlab-based_Filter.html">Matlab Signal Processing</a></li></ul></ul><p class="toc0"><a href="Contributions%253AContents.html">Contributions</a></p><ul></ul><hr class="sep" /><p class="toc0"><a href="BCI2000_Glossary.html">BCI2000 Glossary</a></p> </div>
 <div id='article'>
 <h1 class = "pagetitle">MatlabFilter</h1>
 <p class = "subtitle">Programming Reference</p>
 <hr class = "sep" />
 <div id="mw-content-text" lang="en" dir="ltr" class="mw-content-ltr"><div class="mw-parser-output"><div id="toc" class="toc" role="navigation" aria-labelledby="mw-toc-heading"><input type="checkbox" role="button" id="toctogglecheckbox" class="toctogglecheckbox" style="display:none" /><div class="toctitle" lang="en" dir="ltr"><h2 id="mw-toc-heading">Contents</h2><span class="toctogglespan"><label class="toctogglelabel" for="toctogglecheckbox"></label></span></div>
<ul>
<li class="toclevel-1 tocsection-1"><a href="Programming_Reference%253AMatlabFilter.html#Overview"><span class="tocnumber">1</span> <span class="toctext">Overview</span></a></li>
<li class="toclevel-1 tocsection-2"><a href="Programming_Reference%253AMatlabFilter.html#Parameters_and_States"><span class="tocnumber">2</span> <span class="toctext">Parameters and States</span></a></li>
<li class="toclevel-1 tocsection-3"><a href="Programming_Reference%253AMatlabFilter.html#Input_and_Output_Signal_Format"><span class="tocnumber">3</span> <span class="toctext">Input and Output Signal Format</span></a></li>
<li class="toclevel-1 tocsection-4"><a href="Programming_Reference%253AMatlabFilter.html#Error_Reporting"><span class="tocnumber">4</span> <span class="toctext">Error Reporting</span></a></li>
<li class="toclevel-1 tocsection-5"><a href="Programming_Reference%253AMatlabFilter.html#Combining_the_MatlabFilter_with_other_Signal_Processing_Filters"><span class="tocnumber">5</span> <span class="toctext">Combining the MatlabFilter with other Signal Processing Filters</span></a></li>
<li class="toclevel-1 tocsection-6"><a href="Programming_Reference%253AMatlabFilter.html#Command_Line_Options"><span class="tocnumber">6</span> <span class="toctext">Command Line Options</span></a>
<ul>
<li class="toclevel-2 tocsection-7"><a href="Programming_Reference%253AMatlabFilter.html#MatlabExecutable"><span class="tocnumber">6.1</span> <span class="toctext">MatlabExecutable</span></a></li>
<li class="toclevel-2 tocsection-8"><a href="Programming_Reference%253AMatlabFilter.html#MatlabWD"><span class="tocnumber">6.2</span> <span class="toctext">MatlabWD</span></a></li>
<li class="toclevel-2 tocsection-9"><a href="Programming_Reference%253AMatlabFilter.html#MatlabStayOpen"><span class="tocnumber">6.3</span> <span class="toctext">MatlabStayOpen</span></a></li>
</ul>
</li>
<li class="toclevel-1 tocsection-10"><a href="Programming_Reference%253AMatlabFilter.html#Troubleshooting"><span class="tocnumber">7</span> <span class="toctext">Troubleshooting</span></a>
<ul>
<li class="toclevel-2 tocsection-11"><a href="Programming_Reference%253AMatlabFilter.html#Debugging_Matlab_functions"><span class="tocnumber">7.1</span> <span class="toctext">Debugging Matlab functions</span></a></li>
<li class="toclevel-2 tocsection-12"><a href="Programming_Reference%253AMatlabFilter.html#Matlab_doesn.27t_find_your_functions"><span class="tocnumber">7.2</span> <span class="toctext">Matlab doesn't find your functions</span></a></li>
<li class="toclevel-2 tocsection-13"><a href="Programming_Reference%253AMatlabFilter.html#There_is_no_Matlab_instance_started_up"><span class="tocnumber">7.3</span> <span class="toctext">There is no Matlab instance started up</span></a></li>
<li class="toclevel-2 tocsection-14"><a href="Programming_Reference%253AMatlabFilter.html#You_get_linker_errors_when_rebuilding_MatlabSignalProcessing"><span class="tocnumber">7.4</span> <span class="toctext">You get linker errors when rebuilding <i>MatlabSignalProcessing</i></span></a></li>
</ul>
</li>
<li class="toclevel-1 tocsection-15"><a href="Programming_Reference%253AMatlabFilter.html#See_also"><span class="tocnumber">8</span> <span class="toctext">See also</span></a></li>
</ul>
</div>

<h2><span class="mw-headline" id="Overview">Overview</span></h2>
<p>The <i>MatlabFilter</i> implements a mechanism for using Matlab scripts within the BCI2000 pipeline. The <i>MatlabFilter</i> calls Matlab to act upon signals, parameters, and states. It provides the full BCI2000 <a href="Programming_Reference%253AGenericFilter_Class.html" title="Programming Reference:GenericFilter Class">filter interface</a> to a Matlab filter implementation.
In earlier versions of BCI2000, the <i>MatlabFilter</i> was using the MatlabEngine library to start up and interact with an instance of Matlab. This is no longer the case. Rather, Matlab is now started up executing a client program that receives commands from BCI2000 through a local TCP socket. This has the advantage of greater transparency regarding which Matlab executable is started up in case of multiple parallel installations, and that it works no matter whether BCI2000's bitness matches that of Matlab or not. Also, this  is faster than the Matlab engine on Windows, because the Matlab engine utilizes COM marshaling mechanisms to translate data forth and back, whereas data is transmitted in text form through the socket connection.
</p><p>While BCI2000 is running, each block of data is provided to Matlab via shared memory, and a well-specified Matlab function (i.e. *.m file) is executed. As explained in more detail in the Programming reference for the  <a href="Programming_Reference%253AGenericFilter_Class.html" title="Programming Reference:GenericFilter Class">GenericFilter Class</a>, all BCI2000 filters consist of a set of functions. The MatlabFilter will, upon execution of each of these functions, contact Matlab and execute the corresponding Matlab function equivalent. Furthermore, the MatlabFilter copies the input signal, states and events to Matlab, and copies the output signal and states from Matlab after processing the signal.
</p>
<table style="color:black;background-color:#ffffcc;" cellpadding="5" cellspacing="0" border="2">
<tbody><tr>
<th>BCI2000 function
</th>
<th>Matlab equivalent
</th>
<th>Purpose
</th></tr>
<tr>
<td><a href="Programming_Reference%253AGenericFilter_Class.html#Constructor" title="Programming Reference:GenericFilter Class">Constructor()</a>
</td>
<td>bci_Construct
</td>
<td>define parameters and states
</td></tr>
<tr>
<td><a href="Programming_Reference%253AGenericFilter_Class.html#Preflight" title="Programming Reference:GenericFilter Class">Preflight()</a>
</td>
<td>bci_Preflight
</td>
<td>test for valid and consistent parameter values
</td></tr>
<tr>
<td><a href="Programming_Reference%253AGenericFilter_Class.html#Initialize" title="Programming Reference:GenericFilter Class">Initialize()</a>
</td>
<td>bci_Initialize
</td>
<td>apply parameter values
</td></tr>
<tr>
<td><a href="Programming_Reference%253AGenericFilter_Class.html#StartRun" title="Programming Reference:GenericFilter Class">StartRun()</a>
</td>
<td>bci_StartRun
</td>
<td>produce a consistent state at the beginning of a run
</td></tr>
<tr>
<td><a href="Programming_Reference%253AGenericFilter_Class.html#Process" title="Programming Reference:GenericFilter Class">Process()</a>
</td>
<td>bci_Process
</td>
<td>process a portion of data (data block)
</td></tr>
<tr>
<td><a href="Programming_Reference%253AGenericFilter_Class.html#StopRun" title="Programming Reference:GenericFilter Class">StopRun()</a>
</td>
<td>bci_StopRun
</td>
<td>produce a consistent state at the end of a run
</td></tr>
<tr>
<td><a href="Programming_Reference%253AGenericFilter_Class.html#Resting" title="Programming Reference:GenericFilter Class">Resting()</a>
</td>
<td>bci_Resting
</td>
<td>set any adapted parameter values after the end of a run
</td></tr>
<tr>
<td><a href="Programming_Reference%253AGenericFilter_Class.html#Halt" title="Programming Reference:GenericFilter Class">Halt()</a>
</td>
<td>bci_Halt
</td>
<td>stop any asynchronous activity between runs, and before shutdown
</td></tr>
<tr>
<td><a href="Programming_Reference%253AGenericFilter_Class.html#Destructor" title="Programming Reference:GenericFilter Class">Destructor()</a>
</td>
<td>bci_Destruct
</td>
<td>deallocate any resources allocated while executing any of the previous functions
</td></tr></tbody></table>
<p>Existence of the above-listed Matlab functions is not mandatory, the Matlab 'exist' command will be used to determine whether a given function is available, and will not call Matlab when this is not the case. If either of the bci_Preflight, bci_Initialize, or bci_Process functions is not available, a warning will be displayed to the user.
</p><p>Most of these Matlab functions do not take arguments, except for
</p>
<pre> function [parameters, states] = bci_Construct;
 
 function [out_signal_dim] = bci_Preflight( in_signal_dim );
 
 function bci_Initialize( in_signal_dim, out_signal_dim );
 
 function [out_signal] = bci_Process( in_signal );
</pre>
<p>The most important functions is <tt>bci_Process</tt>, which is executed every time a new block of data is passed through the pipeline. The <tt>bci_Construct</tt> function is executed at the beginning and determines the parameters and states. The <tt>bci_Initialize</tt> function determines whether all requirements are met. The <tt>bci_StartRun</tt> function prepares the computation that is done during processing (e.g. computing filter parameters). Communication between these Matlab functions is done using global variables.
</p>
<h2><span class="mw-headline" id="Parameters_and_States">Parameters and States</span></h2>
<p>Parameters and states are accessible via global Matlab structs called  'bci_Parameters' and 'bci_States'. Parameters may be changed from <tt>bci_StopRun</tt> and <tt>bci_Resting</tt>, and will automatically be propagated to the other modules. State values may be modified from the <tt>bci_Process</tt> function. 
</p><p>To add parameters and states to the BCI2000 list of states, the <tt>bci_Construct</tt> function may return non-empty cell arrays of strings in its parameters  and states return values. The strings constituting these cell arrays are <a href="Technical_Reference%253AParameter_Definition.html" title="Technical Reference:Parameter Definition">parameter</a> and <a href="Technical_Reference%253AState_Definition.html" title="Technical Reference:State Definition">state definitions</a>.
</p><p>Your added parameters will appear in the <a href="User_Reference%253AOperator_Module.html" title="User Reference:Operator Module">operator module's</a> parameter configuration dialog. Your parameter definition's section name will be used to direct its position in the configuration dialog's register cards:
</p>
<pre>MyFilter int MyParam= 2 0 0 2 // ...
</pre>
<p>will display the <i>MyParam</i> parameter on separate register card named <i>MyFilter</i>.
</p>
<pre>Filtering:MyFilter int MyParam= 2 0 0 2 // ...
</pre>
<p>will display the parameter on the <i>Filtering</i> register card, inside a group called <i>MyFilter</i>.
</p>
<h2><span class="mw-headline" id="Input_and_Output_Signal_Format">Input and Output Signal Format</span></h2>
<p>BCI2000 signals are mapped to Matlab matrices with channel index first, and sample (element) index second. The signal dimension arguments of <tt>bci_Preflight</tt> and <tt>bci_Initialize</tt> are integer vectors  of size 1x2 with <tt>[n_channels n_elements]</tt>.
</p>
<h2><span class="mw-headline" id="Error_Reporting">Error Reporting</span></h2>
<p>To report errors from Matlab functions, use Matlab's <tt>error</tt> command.
Your error messages will be displayed to the user from the <a href="User_Reference%253AOperator_Module.html" title="User Reference:Operator Module">operator module</a>.
</p>
<h2><span class="mw-headline" id="Combining_the_MatlabFilter_with_other_Signal_Processing_Filters">Combining the MatlabFilter with other Signal Processing Filters</span></h2>
<p>In the BCI2000 binary distribution, the <i>MatlabFilter</i> is shipped inside the <i>MatlabSignalProcessing</i> executable. There, the signal processing chain consists of the <a href="https://www.bci2000.org/mediawiki/index.php/User_Reference:SpatialFilter" title="User Reference:SpatialFilter">SpatialFilter</a> and the <i>MatlabFilter</i>. However, by editing <tt>src/core/SignalProcessing/Matlab/PipeDefinition.cpp</tt>, you may add as many <a href="User_Reference%253AFilters.html" title="User Reference:Filters">signal processing filters</a> as you wish.
</p><p>See <a href="Programming_Reference%253AFilter_Chain.html" title="Programming Reference:Filter Chain">Programming Reference:Filter Chain</a> for information about defining a filter chain. Modification of the filter chain requires access to the <a href="Programming_Reference%253ABCI2000_Source_Code.html" title="Programming Reference:BCI2000 Source Code">BCI2000 source code</a>. You will need to rebuild the <i>MatlabSignalProcessing</i> executable.
</p>
<h2><span class="mw-headline" id="Command_Line_Options">Command Line Options</span></h2>
<h3><span class="mw-headline" id="MatlabExecutable">MatlabExecutable</span></h3>
<p>Full path to the Matlab executable that should be started up. If none is given, Matlab is searched at <tt>%PROGRAM FILES%/Matlab/&lt;Release&gt;/bin/matlab.exe</tt> on Windows, and as <tt>matlab</tt> on the search path for other operating systems. If you have installed Matlab to a non-default location, you will need to provide a path because it will not be found automatically. Similarly, if you have installed multiple versions of Matlab in parallel, you will need to provide a path to select which one to use. When specifying the path from the command line or in a batch file, you need to use an URL-like notation for space characters and special characters:
</p>
<pre>start executable MatlabSignalProcessing.exe --local --MatlabExecutable=C:/Program%20Files/Matlab/R2020a/bin/matlab.exe</pre>
<p>This parameter must be set from the command line (batch file). Later changes to this parameter have no effect.
</p>
<h3><span class="mw-headline" id="MatlabWD">MatlabWD</span></h3>
<p>By default, Matlab's working directory is set to the signal processing module's working directory at startup. When using the Matlab filter for signal processing, your filter's code will be contained in the <tt>bci_Process</tt> and associated Matlab functions, which will typically be located inside a dedicated directory. Thus, you may switch between Matlab-based filter implementations by selecting a Matlab working directory at startup.
This may be done by specifying the <tt>MatlabWD</tt> parameter from the command line when starting the MatlabSignalProcessing module:
</p>
<pre>start executable MatlabSignalProcessing.exe --local --MatlabWD="./matlab" 127.0.0.1</pre>
<p>will change Matlab's working directory to a directory called "matlab" inside the BCI2000 "prog" directory at startup, and execute <tt>bci_Process</tt> and associated functions from there.
</p><p>This parameter must be set from the command line; later changes will have no effect.
</p><p>Using the <tt>--MatlabWD</tt> command line option, you may easily switch between multiple Matlab-based BCI2000 configurations.
Simply create a separate startup batch file for each configuration, and specify the respective configuration's path on the command line that starts up the MatlabFilter.
</p>
<h3><span class="mw-headline" id="MatlabStayOpen">MatlabStayOpen</span></h3>
<p>The <tt>MatlabFilter</tt> will open a new instance of Matlab when it starts. 
By default, this instance will be closed when BCI2000 quits.
Generally, this behavior is desired to ensure a well-defined BCI2000 system state after each startup.
For debugging purposes, though, it is sometimes useful to have Matlab's command window available even after BCI2000 has been quit.
This behavior is controlled by another command-line parameter, <tt>MatlabStayOpen</tt>, which may take the following values:
</p>
<ul><li>0 is the default (no change in behavior),</li>
<li>1 keeps Matlab open but clears variables used to transmit information forth and back between BCI2000 and Matlab,</li>
<li>2 also preserves intermediate variables (such as bci_Parameters and bci_States) in Matlab's workspace.</li></ul>
<p>To set this parameter to 2, use this command to start up the signal processing module:
</p>
<pre>start executable MatlabSignalProcessing.exe --local --MatlabStayOpen=2</pre>
<p>Once the <tt>MatlabStayOpen</tt> parameter has been set from the command line, it will be listed on the Operator Module's parameter configuration dialog's "system" tab, and may be modified from there. The change will be applied when clicking <i>Set Config</i>.
</p>
<h2><span class="mw-headline" id="Troubleshooting">Troubleshooting</span></h2>
<h3><span class="mw-headline" id="Debugging_Matlab_functions">Debugging Matlab functions</span></h3>
<p>Start BCI2000. The <i>MatlabFilter</i> will open a Matlab instance in its own window.
Switch to the Matlab instance.
Open, e.g.,<tt>bci_Process.m</tt> in a Matlab editor window using the Matlab GUI.
In the editor window, set breakpoints as you would normally.
Execution will be paused, and you may examine variables hovering the mouse over them.
</p><p><b>NOTE:</b> In some versions of Matlab, you cannot open Matlab editor windows/tabs when 
Matlab has been started by BCI2000. As a workaround, open Matlab without BCI2000 first,
open the desired files in the editor, and quit Matlab. Then start Matlab again through
BCI2000. Your editor tabs will be available as before, and you can switch to a file and
set breakpoints as desired.
</p>
<h3><span id="Matlab_doesn't_find_your_functions"></span><span class="mw-headline" id="Matlab_doesn.27t_find_your_functions">Matlab doesn't find your functions</span></h3>
<p>Make sure to
</p>
<ul><li>either set Matlab's working directory to the directory containing your functions, using the <tt>--MatlabWD</tt> command line option described above,</li>
<li>or add the respective directory to your Matlab path.</li></ul>
<p>Generally, the first option is recommended over the second one.
</p>
<h3><span class="mw-headline" id="There_is_no_Matlab_instance_started_up">There is no Matlab instance started up</span></h3>
<p>If you have installed Matlab in an unusual location, it won't be found automatically. Make sure to set the <tt>--MatlabExecutable</tt> command line option as described above.
</p>
<h3><span class="mw-headline" id="You_get_linker_errors_when_rebuilding_MatlabSignalProcessing">You get linker errors when rebuilding <i>MatlabSignalProcessing</i></span></h3>
<p>If you get linker errors after editing <tt>PipeDefinition.cpp</tt>, make sure that all filters' cpp files are part of the <i>MatlabSignalProcessing</i> project.
</p>
<h2><span class="mw-headline" id="See_also">See also</span></h2>
<p><a href="Technical_Reference%253ACore_Modules.html#Signal_Processing_Module" title="Technical Reference:Core Modules">Technical Reference:Core Modules#Signal Processing Module</a>, 
<a href="Technical_Reference%253AParameter_Definition.html" title="Technical Reference:Parameter Definition">Technical Reference:Parameter Definition</a>, 
<a href="Technical_Reference%253AState_Definition.html" title="Technical Reference:State Definition">Technical Reference:State Definition</a>, 
<a href="Programming_Reference%253AGenericFilter_Class.html" title="Programming Reference:GenericFilter Class">Programming Reference:GenericFilter Class</a>, 
<a href="Programming_Reference%253AFilter_Chain.html" title="Programming Reference:Filter Chain">Programming Reference:Filter Chain</a>, 
<a href="Contributions%253AFieldTripBuffer.html" title="Contributions:FieldTripBuffer">Contributions:FieldTripBuffer</a>
</p>
<ul><li>Matlab tutorial for <a href="Programming_Tutorial%253AImplementing_a_Matlab-based_Filter.html" class="mw-redirect" title="Programming Tutorial:Implementing a Matlab-based Filter">IIR bandpass filtering, followed with RMS envelope computation, and linear classification</a></li>
<li>Matlab tutorial for <a href="Programming_Tutorial%253AImplementing_another_Matlab-based_Filter.html" class="mw-redirect" title="Programming Tutorial:Implementing another Matlab-based Filter">adaptive spatial filtering using a beamformer, power computation and normalization</a></li></ul>
<!-- 
NewPP limit report
Cached time: 20230524000616
Cache expiry: 86400
Dynamic content: false
Complications: []
CPU time usage: 0.028 seconds
Real time usage: 0.031 seconds
Preprocessor visited node count: 78/1000000
Post‐expand include size: 0/2097152 bytes
Template argument size: 0/2097152 bytes
Highest expansion depth: 2/40
Expensive parser function count: 0/100
Unstrip recursion depth: 0/20
Unstrip post‐expand size: 304/5000000 bytes
-->
<!--
Transclusion expansion time report (%,ms,calls,template)
100.00%    0.000      1 -total
-->

<!-- Saved in parser cache with key wikidb-bci_:pcache:idhash:1639-0!canonical and timestamp 20230524000616 and revision id 9231
 -->
</div></div><div class="printfooter">
Retrieved from "<a dir="ltr" href="http://www.bci2000.org/mediawiki/index.php?title=Programming_Reference:MatlabFilter&amp;oldid=9231">http://www.bci2000.org/mediawiki/index.php?title=Programming_Reference:MatlabFilter&amp;oldid=9231</a>"</div>
 </div>
</body>
</html>