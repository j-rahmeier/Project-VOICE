// Import definitions for include/BAlert.h, generated by dylib_imports.sh
#include "BAlert.imports.h"
#include "DylibImports.h"

extern "C" {
int (__stdcall *BAlertGetDeviceType)() = 0;
int (__stdcall *BAlertStart)(bool bUseFilter) = 0;
int (__stdcall *BAlertStop)() = 0;
int (__stdcall *BAlertWaitForData)(float* fBuffer, int nBlockSize) = 0;
}

static const Dylib::Import imports[] =
{
  { "BAlertGetDeviceType", (void**)&BAlertGetDeviceType, Dylib::Import::cppMangled | Dylib::Import::cMangled },
  { "BAlertStart", (void**)&BAlertStart, Dylib::Import::cppMangled | Dylib::Import::cMangled },
  { "BAlertStop", (void**)&BAlertStop, Dylib::Import::cppMangled | Dylib::Import::cMangled },
  { "BAlertWaitForData", (void**)&BAlertWaitForData, Dylib::Import::cppMangled | Dylib::Import::cMangled },
  { 0, 0, 0 }
};

// Here you may specify a custom error message to be displayed when the library cannot be found.
static const char* notFoundMsg = "";
// Here you may specify an URL to some local or remote help resource.
static const char* notFoundURL = "";
RegisterDylib( BAlert, imports, notFoundMsg, notFoundURL );

