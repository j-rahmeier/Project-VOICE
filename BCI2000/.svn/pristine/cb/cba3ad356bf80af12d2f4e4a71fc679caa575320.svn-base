// Import declarations for EyeX library, generated by DylibTool
#ifndef EyeX_IMPORTS_H
#define EyeX_IMPORTS_H

#include "Win32Defs.h"

// Disable function declarations in the original header
// file by #defining function names to point to symbols that
// are not referenced by any code.
#define txInitializeEyeX txInitializeEyeX_100b__
#define txUninitializeEyeX txUninitializeEyeX_197c__
#define txIsEyeXInitialized txIsEyeXInitialized_4229__
#define txWriteLogMessage txWriteLogMessage_7744__
#define txSetInvalidArgumentHandler txSetInvalidArgumentHandler_7949__
#define txEnableMonoCallbacks txEnableMonoCallbacks_6072__
#define txGetEyeXAvailability txGetEyeXAvailability_3c24__
#define txCreateContext txCreateContext_001f__
#define txReleaseContext txReleaseContext_2e04__
#define txShutdownContext txShutdownContext_3815__
#define txSetContextName txSetContextName_6115__
#define txSetContextParams txSetContextParams_7c5f__
#define txGetContextName txGetContextName_386f__
#define txGetTrackedObjects txGetTrackedObjects_221d__
#define txEnableConnection txEnableConnection_1667__
#define txDisableConnection txDisableConnection_3236__
#define txGetConnectionState txGetConnectionState_2b3a__
#define txRegisterConnectionStateChangedHandler txRegisterConnectionStateChangedHandler_6f2c__
#define txUnregisterConnectionStateChangedHandler txUnregisterConnectionStateChangedHandler_6d3d__
#define txRegisterMessageHandler txRegisterMessageHandler_7b37__
#define txUnregisterMessageHandler txUnregisterMessageHandler_7d45__
#define txRegisterQueryHandler txRegisterQueryHandler_413e__
#define txUnregisterQueryHandler txUnregisterQueryHandler_0a33__
#define txRegisterEventHandler txRegisterEventHandler_5821__
#define txUnregisterEventHandler txUnregisterEventHandler_132c__
#define txPerformScheduledJobs txPerformScheduledJobs_1351__
#define txGetContext txGetContext_3068__
#define txGetObjectType txGetObjectType_065c__
#define txGetObjectTypeName txGetObjectTypeName_5f2a__
#define txReleaseObject txReleaseObject_2f5a__
#define txFormatObjectAsText txFormatObjectAsText_7c6c__
#define txGetAsyncDataResultCode txGetAsyncDataResultCode_4a3e__
#define txGetAsyncDataContent txGetAsyncDataContent_612f__
#define txCreateSnapshot txCreateSnapshot_4441__
#define txCreateSnapshotWithQueryBounds txCreateSnapshotWithQueryBounds_783b__
#define txCreateSnapshotForQuery txCreateSnapshotForQuery_5942__
#define txCommitSnapshotAsync txCommitSnapshotAsync_584a__
#define txGetSnapshotBounds txGetSnapshotBounds_3b09__
#define txGetSnapshotWindowIdCount txGetSnapshotWindowIdCount_7b5d__
#define txGetSnapshotWindowId txGetSnapshotWindowId_436e__
#define txAddSnapshotWindowId txAddSnapshotWindowId_745c__
#define txCreateInteractor txCreateInteractor_4074__
#define txCreateRectangularInteractor txCreateRectangularInteractor_3042__
#define txRemoveInteractor txRemoveInteractor_1a54__
#define txGetInteractors txGetInteractors_6b2c__
#define txCreateSnapshotBounds txCreateSnapshotBounds_6b31__
#define txDeleteSnapshotBounds txDeleteSnapshotBounds_136d__
#define txCreateGlobalInteractorSnapshot txCreateGlobalInteractorSnapshot_3450__
#define txGetBoundsType txGetBoundsType_066e__
#define txSetRectangularBoundsData txSetRectangularBoundsData_133d__
#define txSetRectangularBoundsDataRect txSetRectangularBoundsDataRect_4274__
#define txGetRectangularBoundsData txGetRectangularBoundsData_730c__
#define txGetRectangularBoundsDataRect txGetRectangularBoundsDataRect_6341__
#define txBoundsIntersect txBoundsIntersect_3d3e__
#define txBoundsIntersectRect txBoundsIntersectRect_6b42__
#define txGetInteractorId txGetInteractorId_2364__
#define txGetInteractorParentId txGetInteractorParentId_5328__
#define txGetInteractorWindowId txGetInteractorWindowId_5932__
#define txSetInteractorZ txSetInteractorZ_2f4e__
#define txGetInteractorZ txGetInteractorZ_266c__
#define txSetInteractorEnabled txSetInteractorEnabled_3144__
#define txGetInteractorEnabled txGetInteractorEnabled_336d__
#define txSetInteractorDeleted txSetInteractorDeleted_3144__
#define txGetInteractorDeleted txGetInteractorDeleted_2b75__
#define txCreateInteractorBounds txCreateInteractorBounds_6832__
#define txDeleteInteractorBounds txDeleteInteractorBounds_106e__
#define txGetInteractorBounds txGetInteractorBounds_3b09__
#define txCreateInteractorBehavior txCreateInteractorBehavior_451f__
#define txRemoveInteractorBehavior txRemoveInteractorBehavior_291a__
#define txGetInteractorBehavior txGetInteractorBehavior_2548__
#define txGetInteractorBehaviors txGetInteractorBehaviors_1a72__
#define txCreateGazeAwareBehavior txCreateGazeAwareBehavior_6647__
#define txCreateActivatableBehavior txCreateActivatableBehavior_6968__
#define txCreatePannableBehavior txCreatePannableBehavior_3f1e__
#define txCreateGazePointDataBehavior txCreateGazePointDataBehavior_7a7b__
#define txCreateFixationDataBehavior txCreateFixationDataBehavior_1f1e__
#define txCreateMask txCreateMask_3d6e__
#define txRemoveMask txRemoveMask_2b70__
#define txGetMask txGetMask_425f__
#define txGetMaskData txGetMaskData_6f7c__
#define txSetMaskBounds txSetMaskBounds_7a25__
#define txClearMaskBounds txClearMaskBounds_3530__
#define txGetMaskBounds txGetMaskBounds_541f__
#define txCreateCommand txCreateCommand_5a20__
#define txGetCommandType txGetCommandType_460e__
#define txSetCommandData txSetCommandData_5b67__
#define txGetCommandData txGetCommandData_7740__
#define txExecuteCommandAsync txExecuteCommandAsync_1864__
#define txCreateActionCommand txCreateActionCommand_2642__
#define txDisableBuiltinKeys txDisableBuiltinKeys_560c__
#define txEnableBuiltinKeys txEnableBuiltinKeys_2c03__
#define txLaunchConfigurationTool txLaunchConfigurationTool_501f__
#define txSetCurrentProfile txSetCurrentProfile_0b4d__
#define txDeleteProfile txDeleteProfile_196d__
#define txGetBehaviorType txGetBehaviorType_2b43__
#define txSetActivatableBehaviorParams txSetActivatableBehaviorParams_0951__
#define txGetActivatableBehaviorParams txGetActivatableBehaviorParams_733f__
#define txGetActivatableEventType txGetActivatableEventType_5179__
#define txGetActivationFocusChangedEventParams txGetActivationFocusChangedEventParams_373b__
#define txSetPannableBehaviorParams txSetPannableBehaviorParams_4038__
#define txGetPannableBehaviorParams txGetPannableBehaviorParams_771b__
#define txGetPannableEventType txGetPannableEventType_7c74__
#define txGetPannablePanEventParams txGetPannablePanEventParams_0c00__
#define txGetPannableStepEventParams txGetPannableStepEventParams_371b__
#define txGetPannableHandsFreeEventParams txGetPannableHandsFreeEventParams_173b__
#define txSetGazePointDataBehaviorParams txSetGazePointDataBehaviorParams_1a42__
#define txGetGazePointDataBehaviorParams txGetGazePointDataBehaviorParams_733f__
#define txGetGazePointDataEventParams txGetGazePointDataEventParams_0d21__
#define txSetGazeAwareBehaviorParams txSetGazeAwareBehaviorParams_265e__
#define txGetGazeAwareBehaviorParams txGetGazeAwareBehaviorParams_533f__
#define txGetGazeAwareBehaviorEventParams txGetGazeAwareBehaviorEventParams_0222__
#define txSetFixationDataBehaviorParams txSetFixationDataBehaviorParams_4018__
#define txGetFixationDataBehaviorParams txGetFixationDataBehaviorParams_763a__
#define txGetFixationDataEventParams txGetFixationDataEventParams_371b__
#define txGetEyePositionDataEventParams txGetEyePositionDataEventParams_1834__
#define txGetBehaviorEventTimestamp txGetBehaviorEventTimestamp_1513__
#define txGetStateAsync txGetStateAsync_6136__
#define txGetState txGetState_1650__
#define txSetStateAsync txSetStateAsync_0e2b__
#define txCreateStateBag txCreateStateBag_3444__
#define txGetStateBagPath txGetStateBagPath_1453__
#define txRegisterStateObserver txRegisterStateObserver_6025__
#define txUnregisterStateObserver txUnregisterStateObserver_154b__
#define txGetStateValueAsInteger txGetStateValueAsInteger_4f53__
#define txGetStateValueAsReal txGetStateValueAsReal_5306__
#define txGetStateValueAsString txGetStateValueAsString_2565__
#define txGetStateValueAsRectangle txGetStateValueAsRectangle_4866__
#define txGetStateValueAsVector2 txGetStateValueAsVector2_4226__
#define txGetStateValueAsSize2 txGetStateValueAsSize2_357f__
#define txSetStateValueAsInteger txSetStateValueAsInteger_7740__
#define txSetStateValueAsReal txSetStateValueAsReal_1b65__
#define txSetStateValueAsString txSetStateValueAsString_4377__
#define txSetStateValueAsRectangle txSetStateValueAsRectangle_7943__
#define txSetStateValueAsVector2 txSetStateValueAsVector2_7303__
#define txSetStateValueAsSize2 txSetStateValueAsSize2_3668__
#define txGetPropertyForStateValue txGetPropertyForStateValue_1140__
#define txRegisterStateChangedHandler txRegisterStateChangedHandler_580d__
#define txUnregisterStateChangedHandler txUnregisterStateChangedHandler_3e58__
#define txGetNotificationType txGetNotificationType_2a42__
#define txGetNotificationData txGetNotificationData_5c6b__
#define txGetQueryBounds txGetQueryBounds_0c3e__
#define txGetQueryWindowIdCount txGetQueryWindowIdCount_496f__
#define txGetQueryWindowId txGetQueryWindowId_5479__
#define txGetEventInteractorId txGetEventInteractorId_5d35__
#define txGetEventBehavior txGetEventBehavior_1974__
#define txGetEventBehaviors txGetEventBehaviors_365e__

#define TX_NODEBUGOBJECT // contains inline function referring to an imported function
#include "EyeX.h"

// Use #undef to restore function names before declaring
// function pointers with the names originally used to
// declare imports.
#undef txInitializeEyeX
#undef txUninitializeEyeX
#undef txIsEyeXInitialized
#undef txWriteLogMessage
#undef txSetInvalidArgumentHandler
#undef txEnableMonoCallbacks
#undef txGetEyeXAvailability
#undef txCreateContext
#undef txReleaseContext
#undef txShutdownContext
#undef txSetContextName
#undef txSetContextParams
#undef txGetContextName
#undef txGetTrackedObjects
#undef txEnableConnection
#undef txDisableConnection
#undef txGetConnectionState
#undef txRegisterConnectionStateChangedHandler
#undef txUnregisterConnectionStateChangedHandler
#undef txRegisterMessageHandler
#undef txUnregisterMessageHandler
#undef txRegisterQueryHandler
#undef txUnregisterQueryHandler
#undef txRegisterEventHandler
#undef txUnregisterEventHandler
#undef txPerformScheduledJobs
#undef txGetContext
#undef txGetObjectType
#undef txGetObjectTypeName
#undef txReleaseObject
#undef txFormatObjectAsText
#undef txGetAsyncDataResultCode
#undef txGetAsyncDataContent
#undef txCreateSnapshot
#undef txCreateSnapshotWithQueryBounds
#undef txCreateSnapshotForQuery
#undef txCommitSnapshotAsync
#undef txGetSnapshotBounds
#undef txGetSnapshotWindowIdCount
#undef txGetSnapshotWindowId
#undef txAddSnapshotWindowId
#undef txCreateInteractor
#undef txCreateRectangularInteractor
#undef txRemoveInteractor
#undef txGetInteractors
#undef txCreateSnapshotBounds
#undef txDeleteSnapshotBounds
#undef txCreateGlobalInteractorSnapshot
#undef txGetBoundsType
#undef txSetRectangularBoundsData
#undef txSetRectangularBoundsDataRect
#undef txGetRectangularBoundsData
#undef txGetRectangularBoundsDataRect
#undef txBoundsIntersect
#undef txBoundsIntersectRect
#undef txGetInteractorId
#undef txGetInteractorParentId
#undef txGetInteractorWindowId
#undef txSetInteractorZ
#undef txGetInteractorZ
#undef txSetInteractorEnabled
#undef txGetInteractorEnabled
#undef txSetInteractorDeleted
#undef txGetInteractorDeleted
#undef txCreateInteractorBounds
#undef txDeleteInteractorBounds
#undef txGetInteractorBounds
#undef txCreateInteractorBehavior
#undef txRemoveInteractorBehavior
#undef txGetInteractorBehavior
#undef txGetInteractorBehaviors
#undef txCreateGazeAwareBehavior
#undef txCreateActivatableBehavior
#undef txCreatePannableBehavior
#undef txCreateGazePointDataBehavior
#undef txCreateFixationDataBehavior
#undef txCreateMask
#undef txRemoveMask
#undef txGetMask
#undef txGetMaskData
#undef txSetMaskBounds
#undef txClearMaskBounds
#undef txGetMaskBounds
#undef txCreateCommand
#undef txGetCommandType
#undef txSetCommandData
#undef txGetCommandData
#undef txExecuteCommandAsync
#undef txCreateActionCommand
#undef txDisableBuiltinKeys
#undef txEnableBuiltinKeys
#undef txLaunchConfigurationTool
#undef txSetCurrentProfile
#undef txDeleteProfile
#undef txGetBehaviorType
#undef txSetActivatableBehaviorParams
#undef txGetActivatableBehaviorParams
#undef txGetActivatableEventType
#undef txGetActivationFocusChangedEventParams
#undef txSetPannableBehaviorParams
#undef txGetPannableBehaviorParams
#undef txGetPannableEventType
#undef txGetPannablePanEventParams
#undef txGetPannableStepEventParams
#undef txGetPannableHandsFreeEventParams
#undef txSetGazePointDataBehaviorParams
#undef txGetGazePointDataBehaviorParams
#undef txGetGazePointDataEventParams
#undef txSetGazeAwareBehaviorParams
#undef txGetGazeAwareBehaviorParams
#undef txGetGazeAwareBehaviorEventParams
#undef txSetFixationDataBehaviorParams
#undef txGetFixationDataBehaviorParams
#undef txGetFixationDataEventParams
#undef txGetEyePositionDataEventParams
#undef txGetBehaviorEventTimestamp
#undef txGetStateAsync
#undef txGetState
#undef txSetStateAsync
#undef txCreateStateBag
#undef txGetStateBagPath
#undef txRegisterStateObserver
#undef txUnregisterStateObserver
#undef txGetStateValueAsInteger
#undef txGetStateValueAsReal
#undef txGetStateValueAsString
#undef txGetStateValueAsRectangle
#undef txGetStateValueAsVector2
#undef txGetStateValueAsSize2
#undef txSetStateValueAsInteger
#undef txSetStateValueAsReal
#undef txSetStateValueAsString
#undef txSetStateValueAsRectangle
#undef txSetStateValueAsVector2
#undef txSetStateValueAsSize2
#undef txGetPropertyForStateValue
#undef txRegisterStateChangedHandler
#undef txUnregisterStateChangedHandler
#undef txGetNotificationType
#undef txGetNotificationData
#undef txGetQueryBounds
#undef txGetQueryWindowIdCount
#undef txGetQueryWindowId
#undef txGetEventInteractorId
#undef txGetEventBehavior
#undef txGetEventBehaviors

extern "C" TX_RESULT (__cdecl *txInitializeEyeX)( TX_EYEXCOMPONENTOVERRIDEFLAGS flags, const TX_LOGGINGMODEL* pLoggingModel, const TX_THREADINGMODEL* pThreadingModel, const TX_SCHEDULINGMODEL* pSchedulingModel, void* pMemoryModel);
extern "C" TX_RESULT (__cdecl *txUninitializeEyeX)();
extern "C" TX_RESULT (__cdecl *txIsEyeXInitialized)( TX_BOOL* pInitialized);
extern "C" TX_RESULT (__cdecl *txWriteLogMessage)( TX_LOGLEVEL level, TX_CONSTSTRING scope, TX_CONSTSTRING message);
extern "C" TX_RESULT (__cdecl *txSetInvalidArgumentHandler)( TX_INVALIDARGUMENTCALLBACK handler, TX_USERPARAM userParam);
extern "C" TX_RESULT (__cdecl *txEnableMonoCallbacks)( TX_CONSTSTRING monoModuleName);
extern "C" TX_RESULT (__cdecl *txGetEyeXAvailability)( TX_EYEXAVAILABILITY* pEyeXAvailability);
extern "C" TX_RESULT (__cdecl *txCreateContext)( TX_CONTEXTHANDLE* phContext, TX_BOOL trackObjects);
extern "C" TX_RESULT (__cdecl *txReleaseContext)( TX_CONTEXTHANDLE* phContext);
extern "C" TX_RESULT (__cdecl *txShutdownContext)( TX_CONTEXTHANDLE hContext, TX_INTEGER cleanupTimeout, TX_BOOL logLeakingObjectsInfo);
extern "C" TX_RESULT (__cdecl *txSetContextName)( TX_CONTEXTHANDLE hContext, TX_CONSTSTRING name);
extern "C" TX_RESULT (__cdecl *txSetContextParams)( TX_CONTEXTHANDLE hContext, TX_CONSTHANDLE hParams);
extern "C" TX_RESULT (__cdecl *txGetContextName)( TX_CONTEXTHANDLE hContext, TX_STRING pName, TX_SIZE* pNameSize);
extern "C" TX_RESULT (__cdecl *txGetTrackedObjects)( TX_CONSTCONTEXTHANDLE hContext, TX_HANDLE* phObjects, TX_SIZE* pObjectsSize);
extern "C" TX_RESULT (__cdecl *txEnableConnection)( TX_CONTEXTHANDLE hContext);
extern "C" TX_RESULT (__cdecl *txDisableConnection)( TX_CONTEXTHANDLE hContext);
extern "C" TX_RESULT (__cdecl *txGetConnectionState)( TX_CONSTCONTEXTHANDLE hContext, TX_CONNECTIONSTATE* pConnectionState);
extern "C" TX_RESULT (__cdecl *txRegisterConnectionStateChangedHandler)( TX_CONTEXTHANDLE hContext, TX_TICKET* pTicket, TX_CONNECTIONSTATECHANGEDCALLBACK handler, TX_USERPARAM userParam);
extern "C" TX_RESULT (__cdecl *txUnregisterConnectionStateChangedHandler)( TX_CONTEXTHANDLE hContext, TX_TICKET ticket);
extern "C" TX_RESULT (__cdecl *txRegisterMessageHandler)( TX_CONTEXTHANDLE hContext, TX_TICKET* pTicket, TX_MESSAGETYPE messageType, TX_HANDLE hOptions, TX_ASYNCDATACALLBACK handler, TX_USERPARAM userParam);
extern "C" TX_RESULT (__cdecl *txUnregisterMessageHandler)( TX_CONTEXTHANDLE hContext, TX_TICKET ticket);
extern "C" TX_RESULT (__cdecl *txRegisterQueryHandler)( TX_CONTEXTHANDLE hContext, TX_TICKET* pTicket, TX_ASYNCDATACALLBACK handler, TX_USERPARAM userParam);
extern "C" TX_RESULT (__cdecl *txUnregisterQueryHandler)( TX_CONTEXTHANDLE hContext, TX_TICKET ticket);
extern "C" TX_RESULT (__cdecl *txRegisterEventHandler)( TX_CONTEXTHANDLE hContext, TX_TICKET* pTicket, TX_ASYNCDATACALLBACK handler, TX_USERPARAM userParam);
extern "C" TX_RESULT (__cdecl *txUnregisterEventHandler)( TX_CONTEXTHANDLE hContext, TX_TICKET ticket);
extern "C" TX_RESULT (__cdecl *txPerformScheduledJobs)( TX_CONTEXTHANDLE hContext);
extern "C" TX_RESULT (__cdecl *txGetContext)( TX_CONSTHANDLE hObject, TX_CONTEXTHANDLE* phContext);
extern "C" TX_RESULT (__cdecl *txGetObjectType)( TX_CONSTHANDLE hObject, TX_INTERACTIONOBJECTTYPE* phObjectType);
extern "C" TX_RESULT (__cdecl *txGetObjectTypeName)( TX_CONSTHANDLE hObject, TX_STRING pObjectTypeName, TX_SIZE* pObjectTypeNameSize);
extern "C" TX_RESULT (__cdecl *txReleaseObject)( TX_HANDLE* phObject);
extern "C" TX_RESULT (__cdecl *txFormatObjectAsText)( TX_CONSTHANDLE hObject, TX_STRING pText, TX_SIZE* pTextSize);
extern "C" TX_RESULT (__cdecl *txGetAsyncDataResultCode)( TX_CONSTHANDLE hAsyncData, TX_RESULT* pResult);
extern "C" TX_RESULT (__cdecl *txGetAsyncDataContent)( TX_CONSTHANDLE hAsyncData, TX_HANDLE* phObject);
extern "C" TX_RESULT (__cdecl *txCreateSnapshot)( TX_CONTEXTHANDLE hContext, TX_HANDLE* phSnapshot);
extern "C" TX_RESULT (__cdecl *txCreateSnapshotWithQueryBounds)( TX_CONSTHANDLE hQuery, TX_HANDLE* phSnapshot);
extern "C" TX_RESULT (__cdecl *txCreateSnapshotForQuery)( TX_CONSTHANDLE hQuery, TX_HANDLE* phSnapshot);
extern "C" TX_RESULT (__cdecl *txCommitSnapshotAsync)( TX_HANDLE hSnapshot, TX_ASYNCDATACALLBACK completionHandler, TX_USERPARAM userParam);
extern "C" TX_RESULT (__cdecl *txGetSnapshotBounds)( TX_CONSTHANDLE hSnapshot, TX_HANDLE* phBounds);
extern "C" TX_RESULT (__cdecl *txGetSnapshotWindowIdCount)( TX_CONSTHANDLE hSnapshot, TX_SIZE* pWindowIdsCount);
extern "C" TX_RESULT (__cdecl *txGetSnapshotWindowId)( TX_CONSTHANDLE hSnapshot, TX_INTEGER windowIdIndex, TX_STRING pWindowId, TX_SIZE* pWindowIdSize);
extern "C" TX_RESULT (__cdecl *txAddSnapshotWindowId)( TX_HANDLE hSnapshot, TX_CONSTSTRING windowId);
extern "C" TX_RESULT (__cdecl *txCreateInteractor)( TX_HANDLE hSnapshot, TX_HANDLE* phInteractor, TX_CONSTSTRING interactorId, TX_CONSTSTRING parentId, TX_CONSTSTRING windowId);
extern "C" TX_RESULT (__cdecl *txCreateRectangularInteractor)( TX_HANDLE hSnapshot, TX_HANDLE* phInteractor, TX_CONSTSTRING interactorId, TX_RECT* pBounds, TX_CONSTSTRING parentId, TX_CONSTSTRING windowId);
extern "C" TX_RESULT (__cdecl *txRemoveInteractor)( TX_HANDLE hSnapshot, TX_CONSTSTRING interactorId);
extern "C" TX_RESULT (__cdecl *txGetInteractors)( TX_CONSTHANDLE hSnapshot, TX_HANDLE* phInteractors, TX_SIZE* pInteractorsSize);
extern "C" TX_RESULT (__cdecl *txCreateSnapshotBounds)( TX_HANDLE hSnapshot, TX_HANDLE* phBounds, TX_BOUNDSTYPE boundsType);
extern "C" TX_RESULT (__cdecl *txDeleteSnapshotBounds)( TX_HANDLE hSnapshot);
extern "C" TX_RESULT (__cdecl *txCreateGlobalInteractorSnapshot)( TX_CONTEXTHANDLE hContext, TX_CONSTSTRING interactorId, TX_HANDLE* hSnapshot, TX_HANDLE* hInteractor);
extern "C" TX_RESULT (__cdecl *txGetBoundsType)( TX_CONSTHANDLE hBounds, TX_BOUNDSTYPE* pBoundsType);
extern "C" TX_RESULT (__cdecl *txSetRectangularBoundsData)( TX_HANDLE hBounds, TX_REAL x, TX_REAL y, TX_REAL width, TX_REAL height);
extern "C" TX_RESULT (__cdecl *txSetRectangularBoundsDataRect)( TX_HANDLE hBounds, const TX_RECT* pRect);
extern "C" TX_RESULT (__cdecl *txGetRectangularBoundsData)( TX_CONSTHANDLE hBounds, TX_REAL* pX, TX_REAL* pY, TX_REAL* pWidth, TX_REAL* pHeight);
extern "C" TX_RESULT (__cdecl *txGetRectangularBoundsDataRect)( TX_CONSTHANDLE hBounds, TX_RECT* pRect);
extern "C" TX_RESULT (__cdecl *txBoundsIntersect)( TX_CONSTHANDLE hBounds, TX_REAL x2, TX_REAL y2, TX_REAL width2, TX_REAL height2, TX_BOOL* pIntersects);
extern "C" TX_RESULT (__cdecl *txBoundsIntersectRect)( TX_CONSTHANDLE hBounds, const TX_RECT* pRect2, TX_BOOL* pIntersects);
extern "C" TX_RESULT (__cdecl *txGetInteractorId)( TX_CONSTHANDLE hInteractor, TX_STRING pInteractorId, TX_SIZE* pInteractorIdSize);
extern "C" TX_RESULT (__cdecl *txGetInteractorParentId)( TX_CONSTHANDLE hInteractor, TX_STRING pParentInteractorId, TX_SIZE* pInteractorParentIdSize);
extern "C" TX_RESULT (__cdecl *txGetInteractorWindowId)( TX_CONSTHANDLE hInteractor, TX_STRING pWindowId, TX_SIZE* pWindowIdSize);
extern "C" TX_RESULT (__cdecl *txSetInteractorZ)( TX_HANDLE hInteractor, TX_REAL z);
extern "C" TX_RESULT (__cdecl *txGetInteractorZ)( TX_CONSTHANDLE hInteractor, TX_REAL* pZ);
extern "C" TX_RESULT (__cdecl *txSetInteractorEnabled)( TX_HANDLE hInteractor, TX_BOOL enabled);
extern "C" TX_RESULT (__cdecl *txGetInteractorEnabled)( TX_CONSTHANDLE hInteractor, TX_BOOL* pEnabled);
extern "C" TX_RESULT (__cdecl *txSetInteractorDeleted)( TX_HANDLE hInteractor, TX_BOOL deleted);
extern "C" TX_RESULT (__cdecl *txGetInteractorDeleted)( TX_CONSTHANDLE hInteractor, TX_BOOL* pDeleted);
extern "C" TX_RESULT (__cdecl *txCreateInteractorBounds)( TX_HANDLE hInteractor, TX_HANDLE* phBounds, TX_BOUNDSTYPE boundsType);
extern "C" TX_RESULT (__cdecl *txDeleteInteractorBounds)( TX_HANDLE hInteractor);
extern "C" TX_RESULT (__cdecl *txGetInteractorBounds)( TX_CONSTHANDLE hInteractor, TX_HANDLE* phBounds);
extern "C" TX_RESULT (__cdecl *txCreateInteractorBehavior)( TX_HANDLE hInteractor, TX_HANDLE* phBehavior, TX_BEHAVIORTYPE behaviorType);
extern "C" TX_RESULT (__cdecl *txRemoveInteractorBehavior)( TX_HANDLE hInteractor, TX_BEHAVIORTYPE behaviorType);
extern "C" TX_RESULT (__cdecl *txGetInteractorBehavior)( TX_CONSTHANDLE hInteractor, TX_HANDLE* phBehavior, TX_BEHAVIORTYPE behaviorType);
extern "C" TX_RESULT (__cdecl *txGetInteractorBehaviors)( TX_CONSTHANDLE hInteractor, TX_HANDLE* phBehaviors, TX_SIZE* pBehaviorsSize);
extern "C" TX_RESULT (__cdecl *txCreateGazeAwareBehavior)( TX_HANDLE hInteractor, const TX_GAZEAWAREPARAMS* pParams);
extern "C" TX_RESULT (__cdecl *txCreateActivatableBehavior)( TX_HANDLE hInteractor, const TX_ACTIVATABLEPARAMS* pParams);
extern "C" TX_RESULT (__cdecl *txCreatePannableBehavior)( TX_HANDLE hInteractor, const TX_PANNABLEPARAMS* pParams);
extern "C" TX_RESULT (__cdecl *txCreateGazePointDataBehavior)( TX_HANDLE hInteractor, const TX_GAZEPOINTDATAPARAMS* pParams);
extern "C" TX_RESULT (__cdecl *txCreateFixationDataBehavior)( TX_HANDLE hInteractor, const TX_FIXATIONDATAPARAMS* pParams);
extern "C" TX_RESULT (__cdecl *txCreateMask)( TX_HANDLE hInteractor, TX_HANDLE* phMask, TX_MASKTYPE maskType, TX_INTEGER columnCount, TX_INTEGER rowCount, const TX_BYTE* pData);
extern "C" TX_RESULT (__cdecl *txRemoveMask)( TX_HANDLE hInteractor);
extern "C" TX_RESULT (__cdecl *txGetMask)( TX_CONSTHANDLE hInteractor, TX_HANDLE* phMask);
extern "C" TX_RESULT (__cdecl *txGetMaskData)( TX_CONSTHANDLE hMask, TX_INTEGER* pColumnCount, TX_INTEGER* pRowCount, TX_BYTE* pData, TX_SIZE* pDataSize);
extern "C" TX_RESULT (__cdecl *txSetMaskBounds)( TX_HANDLE hInteractor, const TX_RECT* pBounds);
extern "C" TX_RESULT (__cdecl *txClearMaskBounds)( TX_HANDLE hInteractor);
extern "C" TX_RESULT (__cdecl *txGetMaskBounds)( TX_CONSTHANDLE hInteractor, TX_RECT* pBounds);
extern "C" TX_RESULT (__cdecl *txCreateCommand)( TX_CONTEXTHANDLE hContext, TX_HANDLE* phCommand, TX_COMMANDTYPE commandType);
extern "C" TX_RESULT (__cdecl *txGetCommandType)( TX_CONSTHANDLE hCommand, TX_COMMANDTYPE* pCommandType);
extern "C" TX_RESULT (__cdecl *txSetCommandData)( TX_HANDLE hCommand, TX_HANDLE hObject);
extern "C" TX_RESULT (__cdecl *txGetCommandData)( TX_CONSTHANDLE hCommand, TX_HANDLE* phObject);
extern "C" TX_RESULT (__cdecl *txExecuteCommandAsync)( TX_HANDLE hCommand, TX_ASYNCDATACALLBACK completionHandler, TX_USERPARAM userParam);
extern "C" TX_RESULT (__cdecl *txCreateActionCommand)( TX_CONTEXTHANDLE hContext, TX_HANDLE* phCommand, TX_ACTIONTYPE actionType);
extern "C" TX_RESULT (__cdecl *txDisableBuiltinKeys)( TX_CONTEXTHANDLE hContext, TX_CONSTSTRING windowId, TX_ASYNCDATACALLBACK completionHandler, TX_USERPARAM userParam);
extern "C" TX_RESULT (__cdecl *txEnableBuiltinKeys)( TX_CONTEXTHANDLE hContext, TX_CONSTSTRING windowId, TX_ASYNCDATACALLBACK completionHandler, TX_USERPARAM userParam);
extern "C" TX_RESULT (__cdecl *txLaunchConfigurationTool)( TX_CONTEXTHANDLE hContext, TX_CONFIGURATIONTOOL configurationTool, TX_ASYNCDATACALLBACK completionHandler, TX_USERPARAM userParam);
extern "C" TX_RESULT (__cdecl *txSetCurrentProfile)( TX_CONTEXTHANDLE hContext, TX_CONSTSTRING profileName, TX_ASYNCDATACALLBACK completionHandler, TX_USERPARAM userParam);
extern "C" TX_RESULT (__cdecl *txDeleteProfile)( TX_CONTEXTHANDLE hContext, TX_CONSTSTRING profileName, TX_ASYNCDATACALLBACK completionHandler, TX_USERPARAM userParam);
extern "C" TX_RESULT (__cdecl *txGetBehaviorType)( TX_CONSTHANDLE hBehavior, TX_BEHAVIORTYPE* pBehaviorType);
extern "C" TX_RESULT (__cdecl *txSetActivatableBehaviorParams)( TX_HANDLE hBehavior, const TX_ACTIVATABLEPARAMS* pParams);
extern "C" TX_RESULT (__cdecl *txGetActivatableBehaviorParams)( TX_CONSTHANDLE hBehavior, TX_ACTIVATABLEPARAMS* pParams);
extern "C" TX_RESULT (__cdecl *txGetActivatableEventType)( TX_CONSTHANDLE hBehavior, TX_ACTIVATABLEEVENTTYPE* pEventType);
extern "C" TX_RESULT (__cdecl *txGetActivationFocusChangedEventParams)( TX_CONSTHANDLE hBehavior, TX_ACTIVATIONFOCUSCHANGEDEVENTPARAMS* pEventParams);
extern "C" TX_RESULT (__cdecl *txSetPannableBehaviorParams)( TX_HANDLE hBehavior, const TX_PANNABLEPARAMS* pParams);
extern "C" TX_RESULT (__cdecl *txGetPannableBehaviorParams)( TX_CONSTHANDLE hBehavior, TX_PANNABLEPARAMS* pParams);
extern "C" TX_RESULT (__cdecl *txGetPannableEventType)( TX_CONSTHANDLE hBehavior, TX_PANNABLEEVENTTYPE* pEventType);
extern "C" TX_RESULT (__cdecl *txGetPannablePanEventParams)( TX_CONSTHANDLE hBehavior, TX_PANNABLEPANEVENTPARAMS* pEventParams);
extern "C" TX_RESULT (__cdecl *txGetPannableStepEventParams)( TX_CONSTHANDLE hBehavior, TX_PANNABLESTEPEVENTPARAMS* pEventParams);
extern "C" TX_RESULT (__cdecl *txGetPannableHandsFreeEventParams)( TX_CONSTHANDLE hBehavior, TX_PANNABLEHANDSFREEEVENTPARAMS* pEventParams);
extern "C" TX_RESULT (__cdecl *txSetGazePointDataBehaviorParams)( TX_HANDLE hBehavior, const TX_GAZEPOINTDATAPARAMS* pParams);
extern "C" TX_RESULT (__cdecl *txGetGazePointDataBehaviorParams)( TX_CONSTHANDLE hBehavior, TX_GAZEPOINTDATAPARAMS* pParams);
extern "C" TX_RESULT (__cdecl *txGetGazePointDataEventParams)( TX_CONSTHANDLE hBehavior, TX_GAZEPOINTDATAEVENTPARAMS* pEventParams);
extern "C" TX_RESULT (__cdecl *txSetGazeAwareBehaviorParams)( TX_HANDLE hBehavior, const TX_GAZEAWAREPARAMS* pParams);
extern "C" TX_RESULT (__cdecl *txGetGazeAwareBehaviorParams)( TX_CONSTHANDLE hBehavior, TX_GAZEAWAREPARAMS* pParams);
extern "C" TX_RESULT (__cdecl *txGetGazeAwareBehaviorEventParams)( TX_CONSTHANDLE hBehavior, TX_GAZEAWAREEVENTPARAMS* pEventParams);
extern "C" TX_RESULT (__cdecl *txSetFixationDataBehaviorParams)( TX_HANDLE hBehavior, const TX_FIXATIONDATAPARAMS* pParams);
extern "C" TX_RESULT (__cdecl *txGetFixationDataBehaviorParams)( TX_CONSTHANDLE hBehavior, TX_FIXATIONDATAPARAMS* pParams);
extern "C" TX_RESULT (__cdecl *txGetFixationDataEventParams)( TX_CONSTHANDLE hBehavior, TX_FIXATIONDATAEVENTPARAMS* pEventParams);
extern "C" TX_RESULT (__cdecl *txGetEyePositionDataEventParams)( TX_CONSTHANDLE hBehavior, TX_EYEPOSITIONDATAEVENTPARAMS* pEventParams);
extern "C" TX_RESULT (__cdecl *txGetBehaviorEventTimestamp)( TX_CONSTHANDLE hBehavior, TX_REAL* pTimestamp);
extern "C" TX_RESULT (__cdecl *txGetStateAsync)( TX_CONTEXTHANDLE hContext, TX_CONSTSTRING statePath, TX_ASYNCDATACALLBACK completionHandler, TX_USERPARAM userParam);
extern "C" TX_RESULT (__cdecl *txGetState)( TX_CONTEXTHANDLE hContext, TX_CONSTSTRING statePath, TX_HANDLE* phStateBag);
extern "C" TX_RESULT (__cdecl *txSetStateAsync)( TX_HANDLE hStateBag, TX_ASYNCDATACALLBACK completionHandler, TX_USERPARAM userParam);
extern "C" TX_RESULT (__cdecl *txCreateStateBag)( TX_CONTEXTHANDLE hContext, TX_HANDLE* phStateBag, TX_CONSTSTRING statePath);
extern "C" TX_RESULT (__cdecl *txGetStateBagPath)( TX_CONSTHANDLE hStateBag, TX_STRING pStatePath, TX_SIZE* pStatePathSize);
extern "C" TX_RESULT (__cdecl *txRegisterStateObserver)( TX_CONTEXTHANDLE hContext, TX_CONSTSTRING statePath);
extern "C" TX_RESULT (__cdecl *txUnregisterStateObserver)( TX_CONTEXTHANDLE hContext, TX_CONSTSTRING statePath);
extern "C" TX_RESULT (__cdecl *txGetStateValueAsInteger)( TX_CONSTHANDLE hStateBag, TX_CONSTSTRING valuePath, TX_INTEGER* pIntValue);
extern "C" TX_RESULT (__cdecl *txGetStateValueAsReal)( TX_CONSTHANDLE hStateBag, TX_CONSTSTRING valuePath, TX_REAL* pRealValue);
extern "C" TX_RESULT (__cdecl *txGetStateValueAsString)( TX_CONSTHANDLE hStateBag, TX_CONSTSTRING valuePath, TX_STRING pStringValue, TX_SIZE* pStringSize);
extern "C" TX_RESULT (__cdecl *txGetStateValueAsRectangle)( TX_CONSTHANDLE hStateBag, TX_CONSTSTRING valuePath, TX_RECT* pRectValue);
extern "C" TX_RESULT (__cdecl *txGetStateValueAsVector2)( TX_CONSTHANDLE hStateBag, TX_CONSTSTRING valuePath, TX_VECTOR2* pVector2Value);
extern "C" TX_RESULT (__cdecl *txGetStateValueAsSize2)( TX_CONSTHANDLE hStateBag, TX_CONSTSTRING valuePath, TX_SIZE2* pSizeValue);
extern "C" TX_RESULT (__cdecl *txSetStateValueAsInteger)( TX_HANDLE hStateBag, TX_CONSTSTRING valuePath, TX_INTEGER intValue);
extern "C" TX_RESULT (__cdecl *txSetStateValueAsReal)( TX_HANDLE hStateBag, TX_CONSTSTRING valuePath, TX_REAL realValue);
extern "C" TX_RESULT (__cdecl *txSetStateValueAsString)( TX_HANDLE hStateBag, TX_CONSTSTRING valuePath, TX_CONSTSTRING stringValue);
extern "C" TX_RESULT (__cdecl *txSetStateValueAsRectangle)( TX_HANDLE hStateBag, TX_CONSTSTRING valuePath, const TX_RECT* pRectValue);
extern "C" TX_RESULT (__cdecl *txSetStateValueAsVector2)( TX_HANDLE hStateBag, TX_CONSTSTRING valuePath, const TX_VECTOR2* pVector2Value);
extern "C" TX_RESULT (__cdecl *txSetStateValueAsSize2)( TX_HANDLE hStateBag, TX_CONSTSTRING valuePath, const TX_SIZE2* pSizeValue);
extern "C" TX_RESULT (__cdecl *txGetPropertyForStateValue)( TX_CONSTHANDLE hStateBag, TX_PROPERTYHANDLE* phProperty, TX_CONSTSTRING valuePath, TX_BOOL createIfNotFound);
extern "C" TX_RESULT (__cdecl *txRegisterStateChangedHandler)( TX_CONTEXTHANDLE hContext, TX_TICKET* pTicket, TX_CONSTSTRING statePath, TX_ASYNCDATACALLBACK handler, TX_USERPARAM userParam);
extern "C" TX_RESULT (__cdecl *txUnregisterStateChangedHandler)( TX_CONTEXTHANDLE hContext, TX_TICKET ticket);
extern "C" TX_RESULT (__cdecl *txGetNotificationType)( TX_CONSTHANDLE hNotification, TX_NOTIFICATIONTYPE* pNotificationType);
extern "C" TX_RESULT (__cdecl *txGetNotificationData)( TX_CONSTHANDLE hNotification, TX_HANDLE* phObject);
extern "C" TX_RESULT (__cdecl *txGetQueryBounds)( TX_CONSTHANDLE hQuery, TX_HANDLE* phBounds);
extern "C" TX_RESULT (__cdecl *txGetQueryWindowIdCount)( TX_CONSTHANDLE hQuery, TX_SIZE* pWindowIdsCount);
extern "C" TX_RESULT (__cdecl *txGetQueryWindowId)( TX_CONSTHANDLE hQuery, TX_INTEGER windowIdIndex, TX_STRING pWindowId, TX_SIZE* pWindowIdSize);
extern "C" TX_RESULT (__cdecl *txGetEventInteractorId)( TX_CONSTHANDLE hEvent, TX_STRING pInteractorId, TX_SIZE* pInteractorIdSize);
extern "C" TX_RESULT (__cdecl *txGetEventBehavior)( TX_CONSTHANDLE hEvent, TX_HANDLE* phBehavior, TX_BEHAVIORTYPE behaviorType);
extern "C" TX_RESULT (__cdecl *txGetEventBehaviors)( TX_CONSTHANDLE hEvent, TX_HANDLE* phBehaviors, TX_SIZE* pBehaviorsSize);

namespace Dylib { bool EyeX_Loaded(); }

#endif // EyeX_IMPORTS_H
