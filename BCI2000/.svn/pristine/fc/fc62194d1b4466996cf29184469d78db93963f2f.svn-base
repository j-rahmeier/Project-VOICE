// Import declarations for GDSClientAPI library, generated by DylibTool
#ifndef GDSClientAPI_IMPORTS_H
#define GDSClientAPI_IMPORTS_H

#include "Win32Defs.h"

// Disable function declarations in the original header
// file by #defining function names to point to symbols that
// are not referenced by any code.
#define GDS_Initialize GDS_Initialize_7c4e__
#define GDS_Uninitialize GDS_Uninitialize_0920__
#define GDS_GetConnectedDevices GDS_GetConnectedDevices_6758__
#define GDS_FreeConnectedDevicesList GDS_FreeConnectedDevicesList_3c78__
#define GDS_Connect GDS_Connect_3739__
#define GDS_Disconnect GDS_Disconnect_5269__
#define GDS_BecomeCreator GDS_BecomeCreator_4859__
#define GDS_BecomeParticipant GDS_BecomeParticipant_4859__
#define GDS_SetConfiguration GDS_SetConfiguration_5829__
#define GDS_GetConfiguration GDS_GetConfiguration_7510__
#define GDS_FreeConfigurationList GDS_FreeConfigurationList_263c__
#define GDS_StartAcquisition GDS_StartAcquisition_261e__
#define GDS_StopAcquisition GDS_StopAcquisition_2b6b__
#define GDS_StartStreaming GDS_StartStreaming_4a67__
#define GDS_StopStreaming GDS_StopStreaming_5207__
#define GDS_GetDataInfo GDS_GetDataInfo_0b3a__
#define GDS_GetData GDS_GetData_5a5a__
#define GDS_SetConfigurationChangedCallback GDS_SetConfigurationChangedCallback_147e__
#define GDS_SetDataAcquisitionStartedCallback GDS_SetDataAcquisitionStartedCallback_147e__
#define GDS_SetDataAcquisitionStoppedCallback GDS_SetDataAcquisitionStoppedCallback_147e__
#define GDS_SetDataAcquisitionErrorCallback GDS_SetDataAcquisitionErrorCallback_591a__
#define GDS_SetDataReadyCallback GDS_SetDataReadyCallback_4d43__
#define GDS_SetSessionCreatorDiedCallback GDS_SetSessionCreatorDiedCallback_147e__
#define GDS_SetNewSessionCreatorCallback GDS_SetNewSessionCreatorCallback_5832__
#define GDS_SetServerDiedCallback GDS_SetServerDiedCallback_147e__
#define GDS_SetForcedClientShutdownCallback GDS_SetForcedClientShutdownCallback_147e__
#define GDS_GNAUTILUS_GetDeviceInformation GDS_GNAUTILUS_GetDeviceInformation_1d76__
#define GDS_GNAUTILUS_GetChannelNames GDS_GNAUTILUS_GetChannelNames_5c14__
#define GDS_GNAUTILUS_GetAvailableChannels GDS_GNAUTILUS_GetAvailableChannels_225a__
#define GDS_GNAUTILUS_GetAvailableDigitalIOs GDS_GNAUTILUS_GetAvailableDigitalIOs_767c__
#define GDS_GNAUTILUS_GetSupportedSamplingRates GDS_GNAUTILUS_GetSupportedSamplingRates_7971__
#define GDS_GNAUTILUS_GetSupportedSensitivities GDS_GNAUTILUS_GetSupportedSensitivities_6d65__
#define GDS_GNAUTILUS_GetSupportedNetworkChannels GDS_GNAUTILUS_GetSupportedNetworkChannels_3e2a__
#define GDS_GNAUTILUS_GetSupportedInputSources GDS_GNAUTILUS_GetSupportedInputSources_3576__
#define GDS_GNAUTILUS_SetNetworkChannel GDS_GNAUTILUS_SetNetworkChannel_7233__
#define GDS_GNAUTILUS_GetNetworkChannel GDS_GNAUTILUS_GetNetworkChannel_542b__
#define GDS_GNAUTILUS_GetScaling GDS_GNAUTILUS_GetScaling_7f6b__
#define GDS_GNAUTILUS_SetScaling GDS_GNAUTILUS_SetScaling_6b6b__
#define GDS_GNAUTILUS_ResetScaling GDS_GNAUTILUS_ResetScaling_311a__
#define GDS_GNAUTILUS_Calibrate GDS_GNAUTILUS_Calibrate_6139__
#define GDS_GNAUTILUS_GetBandpassFilters GDS_GNAUTILUS_GetBandpassFilters_5d70__
#define GDS_GNAUTILUS_GetNotchFilters GDS_GNAUTILUS_GetNotchFilters_7c37__
#define GDS_GNAUTILUS_GetImpedance GDS_GNAUTILUS_GetImpedance_0313__
#define GDS_GNAUTILUS_StartImpedanceMeasurement GDS_GNAUTILUS_StartImpedanceMeasurement_3767__
#define GDS_GNAUTILUS_StopImpedanceMeasurement GDS_GNAUTILUS_StopImpedanceMeasurement_6645__

#include "GDSClientAPI.h"

// Use #undef to restore function names before declaring
// function pointers with the names originally used to
// declare imports.
#undef GDS_Initialize
#undef GDS_Uninitialize
#undef GDS_GetConnectedDevices
#undef GDS_FreeConnectedDevicesList
#undef GDS_Connect
#undef GDS_Disconnect
#undef GDS_BecomeCreator
#undef GDS_BecomeParticipant
#undef GDS_SetConfiguration
#undef GDS_GetConfiguration
#undef GDS_FreeConfigurationList
#undef GDS_StartAcquisition
#undef GDS_StopAcquisition
#undef GDS_StartStreaming
#undef GDS_StopStreaming
#undef GDS_GetDataInfo
#undef GDS_GetData
#undef GDS_SetConfigurationChangedCallback
#undef GDS_SetDataAcquisitionStartedCallback
#undef GDS_SetDataAcquisitionStoppedCallback
#undef GDS_SetDataAcquisitionErrorCallback
#undef GDS_SetDataReadyCallback
#undef GDS_SetSessionCreatorDiedCallback
#undef GDS_SetNewSessionCreatorCallback
#undef GDS_SetServerDiedCallback
#undef GDS_SetForcedClientShutdownCallback
#undef GDS_GNAUTILUS_GetDeviceInformation
#undef GDS_GNAUTILUS_GetChannelNames
#undef GDS_GNAUTILUS_GetAvailableChannels
#undef GDS_GNAUTILUS_GetAvailableDigitalIOs
#undef GDS_GNAUTILUS_GetSupportedSamplingRates
#undef GDS_GNAUTILUS_GetSupportedSensitivities
#undef GDS_GNAUTILUS_GetSupportedNetworkChannels
#undef GDS_GNAUTILUS_GetSupportedInputSources
#undef GDS_GNAUTILUS_SetNetworkChannel
#undef GDS_GNAUTILUS_GetNetworkChannel
#undef GDS_GNAUTILUS_GetScaling
#undef GDS_GNAUTILUS_SetScaling
#undef GDS_GNAUTILUS_ResetScaling
#undef GDS_GNAUTILUS_Calibrate
#undef GDS_GNAUTILUS_GetBandpassFilters
#undef GDS_GNAUTILUS_GetNotchFilters
#undef GDS_GNAUTILUS_GetImpedance
#undef GDS_GNAUTILUS_StartImpedanceMeasurement
#undef GDS_GNAUTILUS_StopImpedanceMeasurement

extern "C" void (*GDS_Initialize)();
extern "C" void (*GDS_Uninitialize)();
extern "C" GDS_RESULT (*GDS_GetConnectedDevices)(GDS_ENDPOINT destinationEndpoint, GDS_ENDPOINT localEndpoint,
                                                 GDS_DEVICE_CONNECTION_INFO **connectedDevices,
                                                 size_t *connectedDevicesCount);
extern "C" GDS_RESULT (*GDS_FreeConnectedDevicesList)(GDS_DEVICE_CONNECTION_INFO **connectedDevices,
                                                      size_t connectedDevicesCount);
extern "C" GDS_RESULT (*GDS_Connect)(GDS_ENDPOINT destinationEndpoint, GDS_ENDPOINT localEndpoint,
                                     char (*deviceNames)[32], size_t deviceNamesCount, BOOL openExclusively,
                                     GDS_HANDLE *connectionHandle, BOOL *isCreator);
extern "C" GDS_RESULT (*GDS_Disconnect)(GDS_HANDLE *connectionHandle);
extern "C" GDS_RESULT (*GDS_BecomeCreator)(GDS_HANDLE participantConnectionHandle);
extern "C" GDS_RESULT (*GDS_BecomeParticipant)(GDS_HANDLE creatorConnectionHandle);
extern "C" GDS_RESULT (*GDS_SetConfiguration)(GDS_HANDLE connectionHandle, GDS_CONFIGURATION_BASE *deviceConfigurations,
                                              size_t deviceConfigurationsCount);
extern "C" GDS_RESULT (*GDS_GetConfiguration)(GDS_HANDLE connectionHandle,
                                              GDS_CONFIGURATION_BASE **deviceConfigurations,
                                              size_t *deviceConfigurationsCount);
extern "C" GDS_RESULT (*GDS_FreeConfigurationList)(GDS_CONFIGURATION_BASE **deviceConfigurations,
                                                   size_t deviceConfigurationsCount);
extern "C" GDS_RESULT (*GDS_StartAcquisition)(GDS_HANDLE connectionHandle);
extern "C" GDS_RESULT (*GDS_StopAcquisition)(GDS_HANDLE connectionHandle);
extern "C" GDS_RESULT (*GDS_StartStreaming)(GDS_HANDLE connectionHandle);
extern "C" GDS_RESULT (*GDS_StopStreaming)(GDS_HANDLE connectionHandle);
extern "C" GDS_RESULT (*GDS_GetDataInfo)(GDS_HANDLE connectionHandle, size_t *scanCount, size_t *channelsPerDevice,
                                         size_t *channelsPerDeviceCount, size_t *bufferSizeInSamples);
extern "C" GDS_RESULT (*GDS_GetData)(GDS_HANDLE connectionHandle, size_t *scanCount, float *destinationBuffer,
                                     size_t destinationBufferSizeInSamples);
extern "C" GDS_RESULT (*GDS_SetConfigurationChangedCallback)(GDS_HANDLE connectionHandle,
                                                             GDS_Callback configurationChangedCallback, void *userData);
extern "C" GDS_RESULT (*GDS_SetDataAcquisitionStartedCallback)(GDS_HANDLE connectionHandle,
                                                               GDS_Callback dataAcquisitionStartedCallback,
                                                               void *userData);
extern "C" GDS_RESULT (*GDS_SetDataAcquisitionStoppedCallback)(GDS_HANDLE connectionHandle,
                                                               GDS_Callback dataAcquisitionStoppedCallback,
                                                               void *userData);
extern "C" GDS_RESULT (*GDS_SetDataAcquisitionErrorCallback)(GDS_HANDLE connectionHandle,
                                                             GDS_ResultCallback dataAcquisitionErrorCallback,
                                                             void *userData);
extern "C" GDS_RESULT (*GDS_SetDataReadyCallback)(GDS_HANDLE connectionHandle, GDS_Callback dataReadyCallback,
                                                  size_t numberOfScans, void *userData);
extern "C" GDS_RESULT (*GDS_SetSessionCreatorDiedCallback)(GDS_HANDLE connectionHandle,
                                                           GDS_Callback sessionCreatorDiedCallback, void *userData);
extern "C" GDS_RESULT (*GDS_SetNewSessionCreatorCallback)(GDS_HANDLE connectionHandle,
                                                          GDS_Callback newSessionCreatorCallback, void *userData);
extern "C" GDS_RESULT (*GDS_SetServerDiedCallback)(GDS_HANDLE connectionHandle, GDS_Callback serverDiedCallback,
                                                   void *userData);
extern "C" GDS_RESULT (*GDS_SetForcedClientShutdownCallback)(GDS_HANDLE connectionHandle,
                                                             GDS_Callback forcedClientShutdownCallback, void *userData);
extern "C" GDS_RESULT (*GDS_GNAUTILUS_GetDeviceInformation)(GDS_HANDLE connectionHandle, char (*deviceName)[32],
                                                            char (*deviceInformation)[1024]);
extern "C" GDS_RESULT (*GDS_GNAUTILUS_GetChannelNames)(GDS_HANDLE connectionHandle, char (*deviceName)[32],
                                                       uint32_t *mountedModulesCount, char (*electrodeNames)[4],
                                                       size_t *electrodeNamesCount);
extern "C" GDS_RESULT (*GDS_GNAUTILUS_GetAvailableChannels)(GDS_HANDLE connectionHandle, char (*deviceName)[32],
                                                            BOOL (*availableChannels)[64]);
extern "C" GDS_RESULT (*GDS_GNAUTILUS_GetAvailableDigitalIOs)(
    GDS_HANDLE connectionHandle, char (*deviceName)[32],
    GDS_GNAUTILUS_DIGITAL_IO_CHANNEL (*availableDigitalIOChannels)[8]);
extern "C" GDS_RESULT (*GDS_GNAUTILUS_GetSupportedSamplingRates)(GDS_HANDLE connectionHandle, char (*deviceName)[32],
                                                                 uint32_t *supportedSamplingRates,
                                                                 size_t *supportedSamplingRatesCount);
extern "C" GDS_RESULT (*GDS_GNAUTILUS_GetSupportedSensitivities)(GDS_HANDLE connectionHandle, char (*deviceName)[32],
                                                                 double *supportedSensitivities,
                                                                 size_t *supportedSensitivitiesCount);
extern "C" GDS_RESULT (*GDS_GNAUTILUS_GetSupportedNetworkChannels)(GDS_HANDLE connectionHandle, char (*deviceName)[32],
                                                                   uint32_t *supportedNetworkChannels,
                                                                   size_t *supportedNetworkChannelsCount);
extern "C" GDS_RESULT (*GDS_GNAUTILUS_GetSupportedInputSources)(GDS_HANDLE connectionHandle, char (*deviceName)[32],
                                                                GDS_GNAUTILUS_INPUT_SIGNAL *supportedInputSources,
                                                                size_t *supportedInputSourcesCount);
extern "C" GDS_RESULT (*GDS_GNAUTILUS_SetNetworkChannel)(GDS_HANDLE connectionHandle, char (*deviceName)[32],
                                                         uint32_t networkChannel);
extern "C" GDS_RESULT (*GDS_GNAUTILUS_GetNetworkChannel)(GDS_HANDLE connectionHandle, char (*deviceName)[32],
                                                         uint32_t *networkChannel);
extern "C" GDS_RESULT (*GDS_GNAUTILUS_GetScaling)(GDS_HANDLE connectionHandle, char (*deviceName)[32],
                                                  GDS_GNAUTILUS_SCALING *scaling);
extern "C" GDS_RESULT (*GDS_GNAUTILUS_SetScaling)(GDS_HANDLE connectionHandle, char (*deviceName)[32],
                                                  GDS_GNAUTILUS_SCALING *scaling);
extern "C" GDS_RESULT (*GDS_GNAUTILUS_ResetScaling)(GDS_HANDLE connectionHandle, char (*deviceName)[32]);
extern "C" GDS_RESULT (*GDS_GNAUTILUS_Calibrate)(GDS_HANDLE connectionHandle, char (*deviceName)[32],
                                                 GDS_GNAUTILUS_SCALING *scaling);
extern "C" GDS_RESULT (*GDS_GNAUTILUS_GetBandpassFilters)(GDS_HANDLE connectionHandle, char (*deviceName)[32],
                                                          GDS_FILTER_INFO *bandpassFilters,
                                                          size_t *bandpassFiltersCount);
extern "C" GDS_RESULT (*GDS_GNAUTILUS_GetNotchFilters)(GDS_HANDLE connectionHandle, char (*deviceName)[32],
                                                       GDS_FILTER_INFO *notchFilters, size_t *notchFiltersCount);
extern "C" GDS_RESULT (*GDS_GNAUTILUS_GetImpedance)(GDS_HANDLE connectionHandle, char (*deviceName)[32],
                                                    double (*impedances)[64]);
extern "C" GDS_RESULT (*GDS_GNAUTILUS_StartImpedanceMeasurement)(
    GDS_HANDLE connectionHandle, char (*deviceName)[32],
    GDS_GNAUTILUS_ImpedanceMeasurementCallback impedanceMeasurementCallback, void *userData);
extern "C" GDS_RESULT (*GDS_GNAUTILUS_StopImpedanceMeasurement)(GDS_HANDLE connectionHandle, char (*deviceName)[32],
                                                                BOOL waitUntilCompleted);

namespace Dylib
{
bool GDSClientAPI_Loaded();
}

#endif // GDSClientAPI_IMPORTS_H
