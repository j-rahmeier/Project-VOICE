<!DOCTYPE html>
<html lang="en" dir="ltr">
<head>
<meta charset="UTF-8"/>
<title>User Reference:Matlab Tools - BCI2000 Help</title>
<link rel='shortcut icon' href='../../rsrc/favicon.ico' />
<style type='text/css'>
html { font-size:95%; font-family:arial,helvetica,sans-serif }
.printfooter { display:none }
#tocmain { font-size:81%; font-weight:bold; color:black; background-color:white; border:1px solid black; padding:1em; z-index:10; position:fixed; left:-1px; top:-1px; width:150px; }
#tocmain a { color:blue; text-decoration:none }
#tocmain ul { margin:0 0 0 0.4em; padding:0.1em 0 0 0.1em; list-style-position:outside; list-style-type:disc }
#tocmain li { text-indent:0; margin:0 0 0 1em; padding: 0 0 0 0 }
#tocmain p { margin:0; padding:0.1em 0 0 0.1em }
#tocmain .toc1 { margin-left:1.25em; }
#tocmain .toc2 { margin-left:2.25em; }
#tocmain .toc3 { margin-left:3.25em; }
#article { font-size:91%; position:absolute; left:200px; right:0; padding:1em; margin:0 }
</style>
</head>
<body>
 <div id='tocmain'>
 <a href='Main_Page.html'><img src='../../rsrc/bci2000logo.svg' alt='[Main Page]' /></a> <hr class="sep" /><p class="toc0"><a href="User_Tutorial%253ABCI2000_Tour.html">GettingStarted</a></p><ul></ul><p class="toc0"><a href="User_Reference%253AContents.html">User Manual</a></p><ul><li class="toc1"><a href="User_Reference%253AOperator_Module.html">Operator Module</a></li><li class="toc1"><a href="User_Reference%253AOperator_Module_Scripting.html">Operator Scripting</a></li><li class="toc1"><a href="User_Reference%253AModule_Command_Line_Options.html">Module Command Line Options</a></li><li class="toc1"><a href="User_Reference%253AData_File_Formats.html">Data File Formats</a></li><li class="toc1"><a href="User_Reference%253AFilters.html">Configuration Guide</a></li><li class="toc1"><a href="User_FAQ.html">FAQ</a></li><li class="toc1">Applications</li><ul><li class="toc2"><a href="User_Reference%253ACursorTask.html">Cursor Task</a></li><li class="toc2"><a href="https://www.bci2000.org/mediawiki/index.php/User_Reference:P3SpellerTask">P3Speller Task</a></li><li class="toc2"><a href="https://www.bci2000.org/mediawiki/index.php/User_Reference:StimulusPresentation">Stimulus Presentation</a></li></ul><li class="toc1">Tools</li><ul><li class="toc2"><a href="User_Reference%253ABCI2000Certification.html">BCI2000Certification</a></li><li class="toc2"><a href="User_Reference%253ABCI2000Launcher.html">BCI2000Launcher</a></li><li class="toc2"><a href="User_Reference%253ABCI2000Viewer.html">BCI2000Viewer</a></li><li class="toc2"><a href="User_Reference%253ABCI2000FileInfo.html">BCI2000FileInfo</a></li><li class="toc2"><a href="User_Reference%253ABCI2000Export.html">BCI2000Export</a></li><li class="toc2"><a href="User_Reference%253ABCI2000Analysis.html">BCI2000Analysis</a></li><li class="toc2"><a href="User_Reference%253ABCI2000_Offline_Analysis.html">BCI2000 Offline Analysis</a></li><li class="toc2"><a href="User_Reference%253AEloc_Helper.html">Eloc Helper</a></li><li class="toc2"><a href="User_Reference%253AEEGLabImport.html">EEGLabImport</a></li><li class="toc2">Matlab Tools</li><li class="toc2"><a href="User_Reference%253AMatlab_MEX_Files.html">Matlab MEX Files</a></li><li class="toc2"><a href="User_Reference%253ACommand_Line_Processing.html">Command Line Processing</a></li></ul></ul><p class="toc0"><a href="Technical_Reference%253AContents.html">Technical Reference</a></p><ul></ul><p class="toc0"><a href="Programming_Reference%253AContents.html">Programming Manual</a></p><ul></ul><p class="toc0"><a href="Contributions%253AContents.html">Contributions</a></p><ul></ul><hr class="sep" /><p class="toc0"><a href="BCI2000_Glossary.html">BCI2000 Glossary</a></p> </div>
 <div id='article'>
 <h1 class = "pagetitle">Matlab Tools</h1>
 <p class = "subtitle">User Reference</p>
 <hr class = "sep" />
 <div id="mw-content-text" lang="en" dir="ltr" class="mw-content-ltr"><div class="mw-parser-output"><p>In the <tt>tools/matlab</tt> directory of your BCI2000 distribution, there are several Matlab functions for offline analysis of recorded data-files, for use on the Matlab command-line or in your own custom scripts. The principal function is <tt>bci2000chain</tt>, which allows you to recreate a BCI2000 processing chain offline, explore the effect of parameter changes, and examine the results in Matlab.
</p><p>NB: if you prefer clicking the mouse to writing lines of Matlab code, you will probably be happier with the <a href="User_Reference%253ABCI2000_Offline_Analysis.html" title="User Reference:BCI2000 Offline Analysis">Offline Analysis Matlab GUI</a> or the (now non-Matlab-based) <a href="https://www.bci2000.org/mediawiki/index.php/User_Reference:P300Classifier" title="User Reference:P300Classifier">P300Classifier tool</a>.
</p><p>Here we provide an overview of the main Matlab functions without going into the details of their calling syntax.  As always, to get full documentation on a particular function you can go to the Matlab prompt and type something like
</p>
<pre>&gt;&gt; help bci2000chain
</pre>
<p>Note that most of the Matlab functions here require the <a href="User_Reference%253AMatlab_MEX_Files.html" title="User Reference:Matlab MEX Files">BCI2000 mex files</a> as a dependency. In addition, <tt>bci2000chain</tt> requires binaries of the <a href="User_Reference%253ACommand_Line_Processing.html" title="User Reference:Command Line Processing">BCI2000 command-line tools</a>.
</p><p><br />
</p>
<div id="toc" class="toc" role="navigation" aria-labelledby="mw-toc-heading"><input type="checkbox" role="button" id="toctogglecheckbox" class="toctogglecheckbox" style="display:none" /><div class="toctitle" lang="en" dir="ltr"><h2 id="mw-toc-heading">Contents</h2><span class="toctogglespan"><label class="toctogglelabel" for="toctogglecheckbox"></label></span></div>
<ul>
<li class="toclevel-1 tocsection-1"><a href="User_Reference%253AMatlab_Tools.html#bci2000path"><span class="tocnumber">1</span> <span class="toctext">bci2000path</span></a></li>
<li class="toclevel-1 tocsection-2"><a href="User_Reference%253AMatlab_Tools.html#bci2000chain"><span class="tocnumber">2</span> <span class="toctext">bci2000chain</span></a>
<ul>
<li class="toclevel-2 tocsection-3"><a href="User_Reference%253AMatlab_Tools.html#Dependencies"><span class="tocnumber">2.1</span> <span class="toctext">Dependencies</span></a></li>
<li class="toclevel-2 tocsection-4"><a href="User_Reference%253AMatlab_Tools.html#Example"><span class="tocnumber">2.2</span> <span class="toctext">Example</span></a></li>
</ul>
</li>
<li class="toclevel-1 tocsection-5"><a href="User_Reference%253AMatlab_Tools.html#create_bcidat"><span class="tocnumber">3</span> <span class="toctext">create_bcidat</span></a></li>
<li class="toclevel-1 tocsection-6"><a href="User_Reference%253AMatlab_Tools.html#read_bciprm"><span class="tocnumber">4</span> <span class="toctext">read_bciprm</span></a></li>
<li class="toclevel-1 tocsection-7"><a href="User_Reference%253AMatlab_Tools.html#make_bciprm"><span class="tocnumber">5</span> <span class="toctext">make_bciprm</span></a></li>
<li class="toclevel-1 tocsection-8"><a href="User_Reference%253AMatlab_Tools.html#decode_bcitime"><span class="tocnumber">6</span> <span class="toctext">decode_bcitime</span></a></li>
<li class="toclevel-1 tocsection-9"><a href="User_Reference%253AMatlab_Tools.html#read_bcidate"><span class="tocnumber">7</span> <span class="toctext">read_bcidate</span></a></li>
<li class="toclevel-1 tocsection-10"><a href="User_Reference%253AMatlab_Tools.html#rename_bcidat"><span class="tocnumber">8</span> <span class="toctext">rename_bcidat</span></a></li>
</ul>
</div>

<h2><span class="mw-headline" id="bci2000path">bci2000path</span></h2>
<p>This is a bootstrapping utility. Before you do anything, Matlab needs to know where the tools are.   This function uses the generic function <tt>managepath</tt> (also supplied) to allow you to:
</p>
<ul><li>tell Matlab where your BCI2000 distribution is;</li>
<li>return the full absolute path to a sub-part of the BCI2000 distribution: for example,  <tt>bci2000path('tools/matlab/bci2000path.m')</tt> would return the full path to this file itself (or at least, to where it should be);</li>
<li>add subdirectories of the BCI2000 distribution to the Matlab path, for the duration of the current Matlab session;</li>
<li>add subdirectories of the BCI2000 distribution to the system shell's path, for the duration of the current Matlab session;</li>
<li>remove directories from the path again,  or even remove everything BCI2000-related from the Matlab and system paths in one go.</li></ul>
<p>Of course, before you can call <tt>bci2000path</tt>, Matlab needs to know where <tt>bci2000path</tt> itself is. This chicken-and-egg problem is typical of Matlab path-juggling.  You could use the graphical <tt>pathtool</tt> to add an absolute reference to the <tt>tools/matlab</tt> directory "permanently" to the Matlab path,  but anyone who has made heavy use of  Matlab for some time, and is in the habit of using more than one third-party toolbox, will know that this leads to problems sooner or later. So we do not recommend the path GUI. One solution is to adapt the following lines and put them either in your <tt>startup.m</tt> file, or in some other handy function in the <tt>My Documents\MATLAB</tt> (or <tt>$HOME/matlab</tt>) directory so that you can call it when needed:
</p>
<pre>olddir = pwd;
cd('C:\BCI2000')   % The absolute path has to be hardcoded somewhere, and here it is.  Watch out, in case this is (or becomes) incorrect 
cd tools, cd matlab
bci2000path -AddToMatlabPath tools/matlab
bci2000path -AddToMatlabPath tools/mex
bci2000path -AddToSystemPath tools/cmdline   % required so that BCI2000CHAIN can call the command-line tools
cd(olddir)&#160;% change directory back to where we were before
clear olddir
</pre>
<h2><span class="mw-headline" id="bci2000chain">bci2000chain</span></h2>
<p>The <a href="User_Reference%253ACommand_Line_Processing.html" title="User Reference:Command Line Processing">BCI2000 command-line tools</a> allow the online processing performed by BCI2000 to be recreated exactly offline. This is possible because online BCI2000 modules consist of a chain of <a href="User_Reference%253AFilters.html" title="User Reference:Filters">filters</a>, each filter being implemented in a self-contained source file. We can therefore take the individual filter implementations and build them singly, as separate executables that can be called from the system command-line. Recreating a preprocessing chain offline is then a question of passing a stream of data through a chain of these filter tools, connected by an operating-system "pipe".
</p><p>The <tt>bci2000chain</tt> function uses the command-line tools (calling them via Matlab's builtin function <tt>system</tt>), but it hides the details and presents itself to you as a single Matlab function.
</p>
<h3><span class="mw-headline" id="Dependencies">Dependencies</span></h3>
<p><tt>bci2000chain</tt> requires the <a href="User_Reference%253ACommand_Line_Processing.html" title="User Reference:Command Line Processing">command-line binaries</a>, including <tt>bci_dat2stream</tt> and <tt>bci_stream2mat</tt> as well as any specific filter tools you intend to use, to have been built in <tt>tools/cmdline</tt>. The <tt>tools/cmdline</tt> directory must be on the operating-system path (not to be confused with the Matlab path) for the session.  The <a href="User_Reference%253AMatlab_MEX_Files.html" title="User Reference:Matlab MEX Files">BCI2000 mex files</a> <tt>load_bcidat</tt> and <tt>convert_bciprm</tt>, and the m-files  <tt>make_bciprm.m</tt>, <tt>read_bciprm.m</tt> and <tt>read_bcidate.m</tt>, must be in directories that are on the Matlab path. One way of satisfying these path requirements is shown above, using the <tt>bci2000path</tt> function.
</p>
<h3><span class="mw-headline" id="Example">Example</span></h3>
<p>The following example reads and replays a sample data file through the specified filter chain (TransmissionFilter, then SpatialFilter, then ARFilter). The parameters for these filters start out having the same values that they did when the file was recorded. But in this example, we override some of the spectral estimation parameters using the ones in <tt>ExampleParameters.prm</tt>, and then further override the spatial filter setting by switching it to CAR mode:
</p>
<pre>fn = bci2000path('data', 'samplefiles', 'eeg3_2.dat');

s = bci2000chain(fn, 'TransmissionFilter|SpatialFilter|ARFilter',  'ExampleParameters.prm', 'SpatialFilterType', 3)

</pre>
<p>See the help documentation in the Matlab file for more details.
</p>
<h2><span class="mw-headline" id="create_bcidat">create_bcidat</span></h2>
<p>This utility allows you to create "toy" BCI2000 <tt>.dat</tt> files easily, perhaps using only a numeric signal array and a scalar sampling rate.  Read the help for this function in order to see how to run a <tt>bci2000chain</tt> on a signal that is stored in a Matlab variable rather than a pre-existing file.
</p>
<h2><span class="mw-headline" id="read_bciprm">read_bciprm</span></h2>
<p>This utility allows you to read BCI2000 parameters from a data file, a parameter file, or from a structure, string, or cell array of strings in Matlab. It requires the <a href="User_Reference%253AMatlab_MEX_Files.html" title="User Reference:Matlab MEX Files">mex-files</a> <tt>load_bcidat</tt> and <tt>convert_bciprm</tt>.
</p>
<h2><span class="mw-headline" id="make_bciprm">make_bciprm</span></h2>
<p>This utility allows you to read, combine, and write BCI2000 parameters from multiple sources, making use of <tt>read_bciprm</tt>.
</p>
<h2><span class="mw-headline" id="decode_bcitime">decode_bcitime</span></h2>
<p>This function takes a BCI2000 parameter value that is supposed to indicate time, and figures out whether it is expressed in seconds/milliseconds/microseconds with an explicit PhysicalUnit, or in sexagesimal notation (e.g. MM:SS),  or whether it is a bare number indicating a number of SampleBlocks. In all cases the value is returned, unambiguously, in seconds.
</p>
<h2><span class="mw-headline" id="read_bcidate">read_bcidate</span></h2>
<p>This function uses <tt>read_bciprm</tt> to read one particular parameter, <b>StorageTime</b>, from a data file, from a parameter file, or from some representation of a BCI2000 parameter set in memory.  This datestamp is returned either as a scalar value (i.e. a Matlab <tt>datenum</tt>) or as a string formatted according to your specification.
</p>
<h2><span class="mw-headline" id="rename_bcidat">rename_bcidat</span></h2>
<p>Are you involved in a large BCI research program?  Is it difficult to keep track of all the different experiments, subjects and measurements? Do you have a lot of files that are called something like <tt>TestS001R01.dat</tt>, some of them important, some of them not, all threatening to overwrite each other as soon as somebody accidentally drags and drops something in the wrong place?   Do you find that many of your measurements are done with <b>SubjectSession</b> 001 and an uninformative <b>SubjectName</b>, simply because you were "just quickly trying something out" and have no disciplined procedure for determining and setting the correct session numbers (a difficult question in any case, when experimental conditions keep changing)?  
</p><p>If so, you are not alone.  But help is at hand.  All BCI2000 data files contain a date stamp, in the form of the <b>StorageTime</b> parameter. Wouldn't it be useful if all your data files were named uniquely according to this date stamp, as well as the <b>SubjectName</b>, <b>SubjectSession</b> and <b>SubjectRun</b> that are also stored in the file? Wouldn't it be useful if files from different subjects could be kept together but always appeared in chronological order in the file-system,  and could be quickly checked against your experimental calendar? For more information, type  <tt>help rename_bcidat</tt> at your nearest Matlab prompt, today.
</p>
<!-- 
NewPP limit report
Cached time: 20230524105544
Cache expiry: 86400
Dynamic content: false
Complications: []
CPU time usage: 0.015 seconds
Real time usage: 0.017 seconds
Preprocessor visited node count: 39/1000000
Post‐expand include size: 0/2097152 bytes
Template argument size: 0/2097152 bytes
Highest expansion depth: 2/40
Expensive parser function count: 0/100
Unstrip recursion depth: 0/20
Unstrip post‐expand size: 0/5000000 bytes
-->
<!--
Transclusion expansion time report (%,ms,calls,template)
100.00%    0.000      1 -total
-->

<!-- Saved in parser cache with key wikidb-bci_:pcache:idhash:2027-0!canonical and timestamp 20230524105544 and revision id 6609
 -->
</div></div><div class="printfooter">
Retrieved from "<a dir="ltr" href="http://www.bci2000.org/mediawiki/index.php?title=User_Reference:Matlab_Tools&amp;oldid=6609">http://www.bci2000.org/mediawiki/index.php?title=User_Reference:Matlab_Tools&amp;oldid=6609</a>"</div>
 </div>
</body>
</html>